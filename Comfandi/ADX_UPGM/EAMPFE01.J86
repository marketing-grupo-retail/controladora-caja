\/* TIME STAMP BLOCK ************************************************
\* END OF TIME STAMP BLOCK *****************************************/
!***** Copy over EAMRPU01.J86 for compile *************************!!
! TITLE: Electronic Marketing Support
!
!!  ????-??? THIS MODULE IS "RESTRICTED MATERIALS OF IBM"
!!  (c) COPYRIGHT IBM CORP 1991 ALL RIGHTS RESERVED LICENSED MATERIALS
!!  PROPERTY OF IBM REFER TO COPYRIGHT INSTRUCTIONS FORM NUMBER G120-2083
!
\/**************** CORRECTIONS AND CHANGES **************************/
\/*                                                                 */
\/*  IR95959 - Over/Short totals are incorrect for Electronic       */
\/*            Marketing coupon totals on the store totals recap    */
\/*            report when long accounting totals are used and      */
\/*            multiple (non-current) periods are reported without  */
\/*            leaving the recap report.                            */
\/*            PCE  J03  15Nov91                                    */
\/*                                                                 */
\/*  IR97503 - The EM program name (default is "Preferred Customer")*/
\/*            is missing from the EM print lines and the points    */
\/*            are not being formatted properly in the current      */
\/*            period because the EM options are not being read in. */
\/*            PCE  J03  16Apr92                                    */
\/*                                                                 */
\/*  IR24723 - Correct store total recap report. Store coupon line  */
\/*            and manufactures coupon line are not being displayed */
\/*            when these lines are below the item keyed or scanned */
\/*            line.                                                */
\/*            MWD  MGVA 21JAN94                                    */
\/*                                                                 */
\/*  IR29046 - Correct store total recap report. Trading Stamps     */
\/*            line is bumped off the display screen.               */
\/*            CMJ  MGVA 20MAR95                                    */
\/*                                                                 */
\/*  IR30509 - Tender by variety enhancements caused the electronic */
\/*            coupon lines to print twice.                         */
\/*            CRM  MGVA 29AUG95                                    */
\/*                                                                 */
\/*  IR31828 - PEIR31509 Recap was fixed but performance report was */
\/*            not printing em lines consistently.                  */
\/*            CRM  MGVA 11Mar96                                    */
\/*                                                                 */
\/*  IR32118 - Fix completion for IR31828 when more than 1 operator */
\/*            prints on a page the lines will not appear.          */
\/*            CRM  MGVA 19Apr96                                    */
\/*                                                                 */
\/*  IR33158 - Add EM support for the expanded operator             */
\/*            authorization feature.                               */
\/*            LTG MGVA 25Sept96                                    */
\/*                                                                 */
\/*  IR39149 - Add support for Base Enhancement for reporting       */
\/*            manufacturer coupons by variety.  Co-req IR39147.    */
\/*            RSH MGVA 12Nov98                                     */
\/*                                                                 */
\/*  IR42700 - Limit the call to ALTER.AMOUNT, if enhanced TBV,     */
\/*            print-subtotal (F8) of a individual variety is done  */
\/*            in Store Totals Recap Report and Electronic coupons  */
\/*            are present in the tender on hand column.            */
\/*            CVM MGVA 11Apr00                                     */
\/*                                                                 */
\/*  IR47791 - CoRequisite APAR for Value Pack 2001 which used      */
\/*            four (4) bytes of reserved space.  This allows       */
\/*            Electronic Marketing to be compatable with the       */
\/*            new product.                                         */
\/*            CMJ MGVA 21Feb2002                                   */
\/*                                                                 */
!!***END-OF-SPECIFICATIONS*******************************************
!!*******************************************************************
!!** FREQUENT BUYER REPORT PROCESSING FOR THE PERFORMANCE REPORT   **
!!*******************************************************************

 IF DESTINATION = 1 AND                   \ Destination = display
\   LINE.NO > 21 THEN BEGIN               ! Line is off of screen IR29046
    LINE.NO > 22 THEN BEGIN               ! IR29046
   LINE.NO = LINE.NO + 1                  ! bump line number
END.IT:
   EXIT SUB                               ! Don't display excess
 ENDIF
 ON ERROR GOTO FB.ERR
IF OP.NO.EM THEN GOTO EMSS.ENDFB          ! No EM processing
GOTO EMSS.STARTFB

PRINT.FBUY.LINES:
!!********************************************************************
!!**  Format and write new print lines                              **
!!********************************************************************
!!  XXXXXXXXXXXXXXXXXXXX             XXXXXXXXXXX
!! "  PREFERRED CUSTOMER SALES xxxxx/xxx,xxx.xx  xxx.x% OF ORDER"
!!  123456789012345678901234567890123456789012345678901234567890
!!           1         2         3         4         5         6
!! "S  xxx.x% OF VOLUME "
!!  12345678901234567890
!!           7         8
  IF EMSS.FBUYAMT NE 0 AND                     \ Non-zero amount
     EMSS.FBUYCNT NE 0 THEN BEGIN              ! Non-zero count
    WORK$ = ""
    IF PGM.NAME$ = "" THEN                     \ NO PROGRAM NAME IR97503
      GOSUB GET.OPTIONS                        ! READ IN OPTIONS IR97503
!   USER$ = LEFT$(PGM.NAME$ + STRING$(20," "),20) \ Format name = 20
!         + " SALES "                          ! ADD descriptor = 27
    USER$ = MSG$(1) + MSG$(2)
    WORK$ = RIGHT$("    " + STR$(EMSS.FBUYCNT),5) ! Format count = 5
!   USER$ = USER$ + WORK$ + "/"                ! Merge with "/"   = 33
    J% = MATCH("%Ecnt",USER$,1)                ! LOCATE START
    CALL SUBSTR(USER$,J%-1,WORK$,0,5)          ! REPLACE VARIABLE
    WORK$ = MMCFEC06$(EMSS.FBUYAMT,-1,-1)      ! Format amount
    IF RIGHT$(WORK$,1) = " " THEN
       WORK$ = LEFT$(WORK$,LEN(WORK$) - 1)     ! STRIP TRAILING BLANK
    WORK$ = LEFT$(WORK$ + "         ",11)      ! Pad amount to 11 chars.
!   USER$ = USER$ + WORK$ + " "                ! Merge with blank = 45
    J% = MATCH("%Electr_amt",USER$,1)          ! LOCATE START
    CALL SUBSTR(USER$,J%-1,WORK$,0,11)         ! REPLACE VARIABLE
    WORK$ = ?PCT$(EMSS.FBUYCNT,EMSS.TOTLCNT)   ! Compute % of orders
!   USER$ = USER$ + WORK$ + " OF ORDERS  "     ! Merge with desc = 63
    J% = MATCH("%Ecpr",USER$,1)                ! LOCATE START
    CALL SUBSTR(USER$,J%-1,WORK$,0,5)          ! REPLACE VAR, Only use 5 chars
    WORK$ = ?PCT$(EMSS.FBUYAMT,EMSS.TOTLAMT)   ! Compute % of sales
!   USER$ = USER$ + WORK$ + " OF VOLUME "      ! Merge with desc = 80
    J% = MATCH("%Eapr",USER$,1)                ! LOCATE START
    CALL SUBSTR(USER$,J%-1,WORK$,0,5)          ! REPLACE VAR, Only use 5 chars
    GOSUB WRITE.LINE                           ! WRITE THE LINE
!!
!! "                   COUPONS xxxxx/xx,xxx.xx  $xxx.xx AVERAGE "
!!  123456789012345678901234567890123456789012345678901234567890
!!           1         2         3         4         5         6
!! "SALE  (vs. $xxx.xx)  "
!!  12345678901234567890
!!           7         8
!   USER$ = "                   COUPONS "      ! Descriptor = 27
    USER$ = MSG$(3) + MSG$(4)
    WORK$ = RIGHT$("    " + STR$(EMSS.COUPCNT),5) ! Format count = 5
!   USER$ = USER$ + WORK$ + "/"                ! Merge with "/"   = 33
    J% = MATCH("%Ecct",USER$,1)                ! LOCATE START
    CALL SUBSTR(USER$,J%-1,WORK$,0,5)          ! REPLACE VARIABLE
    WORK$ = MMCFEC06$(EMSS.COUPAMT,-1,-1)      ! Format amount
    IF RIGHT$(WORK$,1) = " " THEN
       WORK$ = LEFT$(WORK$,LEN(WORK$) - 1)     ! STRIP TRAILING BLANK
    WORK$ = LEFT$(WORK$ + "         ",10)      ! Pad amount to 10 chars.
!   USER$ = USER$ + WORK$ + " "                ! Merge with blank = 44
    J% = MATCH("%Eleccpamt",USER$,1)           ! LOCATE START
    CALL SUBSTR(USER$,J%-1,WORK$,0,10)         ! REPLACE VARIABLE
    WORK4% = EMSS.FBUYAMT/EMSS.FBUYCNT         ! Compute FB order size
!   WORK$ = RIGHT$("    $" + STR$(WORK4%),6)   ! Format average
!   WORK$ = LEFT$(WORK$,4) + "."               \  with 1 decimal
!         + RIGHT$(WORK$,2) + " "              !   and blank = 8
    WORK$ = MMCFEC06$(WORK4%,-1,-1)            ! Format amount
    IF RIGHT$(WORK$,1) = " " THEN
       WORK$ = LEFT$(WORK$,LEN(WORK$) - 1)     ! STRIP TRAILING BLANK
    WORK$ = RIGHT$("     " + WORK$,6)          ! Format average
!   USER$ = USER$ + WORK$ + "AVERAGE SALE  "   ! Merge with desc = 66
    J% = MATCH("%Elavg",USER$,1)               ! LOCATE START
    CALL SUBSTR(USER$,J%-1,WORK$,0,6)          ! REPLACE VARIABLE
    IF EMSS.NOFBCNT THEN BEGIN                 ! If not all preferred
      WORK4% = EMSS.NOFBAMT/EMSS.NOFBCNT       ! Compute NFB order size
!     WORK$ = RIGHT$("    (vs. $" + STR$(WORK4%),11) ! Format average
!     WORK$ = LEFT$(WORK$,9) + "."             \  with 1 decimal
!           + RIGHT$(WORK$,2) + ")"            !   and paren = 13
      WORK$ = MMCFEC06$(WORK4%,-1,-1)          ! Format amount
      IF RIGHT$(WORK$,1) = " " THEN
         WORK$ = LEFT$(WORK$,LEN(WORK$) - 1)   ! STRIP TRAILING BLANK
      WORK$ = RIGHT$("     " + WORK$,6)        ! Format average
      J% = MATCH("%Neavg",USER$,1)             ! LOCATE START
      CALL SUBSTR(USER$,J%-1,WORK$,0,6)        ! REPLACE VARIABLE
!     USER$ = USER$ + WORK$ + " "              ! Merge with blanks = 80
    ENDIF ELSE BEGIN
      WORK$ = MMCFEC06$(0,-1,-1)               ! Format amount
      IF RIGHT$(WORK$,1) = " " THEN
         WORK$ = LEFT$(WORK$,LEN(WORK$) - 1)   ! STRIP TRAILING BLANK
      WORK$ = RIGHT$("     " + WORK$,6)        ! Format average
      J% = MATCH("%Neavg",USER$,1)             ! LOCATE START
      CALL SUBSTR(USER$,J%-1,WORK$,0,6)        ! REPLACE VARIABLE
    ENDIF
    GOSUB WRITE.LINE                           ! WRITE THE LINE
!!
!! "        POINTS xxx,xxx.xx SALES xxx,xxx.xx BONUS xxx% xxx,xx"
!!  123456789012345678901234567890123456789012345678901234567890
!!           1         2         3         4         5         6
!! "x.xx REDEEMED xxxx%
!!  12345678901234567890
!!           7         8
    IF (EMSS.ITEMPTS > 0 AND                   \ Sales points
        OP.PPAMT NE OP.AMTPP) OR               \  not just like sales
       EMSS.BONSPTS OR EMSS.REDMPTS THEN BEGIN ! or Bonus/Redeem points
!     USER$ = "        POINTS "                ! Descriptor = 15
      USER$ = MSG$(5) + MSG$(6)
      WORK$ = ?PTS$(EMSS.ITEMPTS)              ! Format item points = 10
!     USER$ = USER$ + WORK$ + " SALES "        ! Merge with desc  = 32
      J% = MATCH("%Totpoints",USER$,1)         ! LOCATE START
      CALL SUBSTR(USER$,J%-1,WORK$,0,10)       ! REPLACE VARIABLE
      WORK$ = ?PTS$(EMSS.BONSPTS)              ! Format bonus points =10
!     USER$ = USER$ + WORK$ + " BONUS "        ! Merge with " "   = 49
      J% = MATCH("%Bonpoints",USER$,1)         ! LOCATE START
      CALL SUBSTR(USER$,J%-1,WORK$,0,10)       ! REPLACE VARIABLE
      IF EMSS.TOTLPTS THEN BEGIN               ! More than redeemed
        WORK4% = EMSS.TOTLPTS * 10             ! Round at whole %
        WORK$ = ?PCT$(EMSS.BONSPTS,WORK4%)     ! Compute % of points
        WORK$ = MID$(WORK$,2,2) +RIGHT$(WORK$,2) ! Format as 4 chars
!       WHILE LEFT$(WORK$,1) = " "             ! Strip leading blanks
!         WORK$ = RIGHT$(WORK$,LEN(WORK$)-1)
!       WEND
        J% = MATCH("%Bn",USER$,1)              ! LOCATE START
        CALL SUBSTR(USER$,J%-1,WORK$,0,3)      ! REPLACE VAR, Only use 3 chars
!       USER$ = USER$ + WORK$ + " "            ! Merge with desc  = 54
      ENDIF
      WORK$ = ?PTS$(EMSS.REDMPTS)              ! Format redeemed = 10
!     USER$ = USER$ + WORK$ + " REDEEMED "     ! Merge with " "   = 74
      J% = MATCH("%Redpoints",USER$,1)         ! LOCATE START
      CALL SUBSTR(USER$,J%-1,WORK$,0,10)       ! REPLACE VARIABLE
      IF EMSS.TOTLPTS THEN BEGIN               ! More than redeemed
        WORK4% = EMSS.TOTLPTS * 10             ! Round at whole %
        WORK$ = ?PCT$(EMSS.REDMPTS,WORK4%)     ! Compute % of points
        WORK$ = MID$(WORK$,1,3) +RIGHT$(WORK$,2) ! Format as 5 chars
!       WHILE LEFT$(WORK$,1) = " "             ! Strip leading blanks
!         WORK$ = RIGHT$(WORK$,LEN(WORK$)-1)
!       WEND
        J% = MATCH("%Rdp",USER$,1)             ! LOCATE START
        CALL SUBSTR(USER$,J%-1,WORK$,0,4)      ! REPLACE VARIABLE
!       USER$ = USER$ + WORK$                  ! Merge with desc  = 79
      ENDIF
!     WORK2$ = STRING$(12," ")                 ! 12 BLANKS
!     USER$ = RIGHT$(WORK2$ + USER$,79)        ! RIGHT JUSTIFY A BIT
      GOSUB WRITE.LINE                         ! WRITE THE LINE
    ENDIF
    USER$ = NULL$                              ! Blank line
    GOSUB WRITE.LINE                           ! Output blank line
    EMSS.ALREADY.DONE2 = -1                    ! IR30509
  ENDIF
RETURN

!IR97503 Add new subroutine
!!********************************************************************
!!**  Read in options from EAMFBOPT                                 **
!!********************************************************************
GET.OPTIONS:
      CLOSE 8                                  ! CLOSE OPTIONS IF OPEN
      OPEN "EAMFBOPT" AS 8 BUFFSIZE 512 NOWRITE NODEL
      %INCLUDE USEROPRR.J86                    ! READ OPTIONS
      CLOSE 8
      IF OP.NO.EM THEN EXIT SUB                ! No EM processing
RETURN
!EIR97503

!!********************************************************************
!!**  Handle errors encountered in the exit code                    **
!!********************************************************************
FB.ERR:

! AIR33158 Error handling of opening EAMOPERA direct.  This is for the
!          possibility that the session number is already being used.
 IF (ERR = "DF") AND (OA.SN > 0) THEN BEGIN
   OA.SN = OA.SN - 1
   OA.FILE.NOT.OPEN = -1
   RESUME
 ENDIF
! EIR33158

 IF ERR NE "CU" THEN       \ Not expected error
 CALL ADXERROR( 0,0,0,3,2, \ Log Error
      "FB"+RIGHT$("00"+STR$(ERRF%),2)+ERR+ERRNHEX$)
 IF ERR = "RN" THEN RESUME END.IT
RESUME

WRITE.LINE:
!!********************************************************************
!!**  Write line to display, printer, or file                       **
!!********************************************************************
  IF DESTINATION = DISPLAY THEN BEGIN        ! Display needed
    IF LINE.NO > 21 THEN RETURN              ! Don't overflow display
    CALL MMCFEC05(POSF(LINE.NO),"CF3")       ! position cursor
    CALL MMCFEC05(PUTF(USER$),"CF7")         ! display string
  ENDIF ELSE BEGIN                           ! write to printer/file
    FORMAT$ = "C" + STR$(LEN(USER$)) + ",C2" ! get format string
    WRITE FORM FORMAT$;#1;USER$,SKIP$        ! write string
  ENDIF
  LINE.NO = LINE.NO + 1                      ! bump line number
RETURN

GET.FBUY.DATA:
!!********************************************************************
!!**  Get frequent buyer data from file data                        **
!!********************************************************************
  EMSS.FBUYAMT = 0                             ! No totals until found
!AIR47791
! IF LEN(OP.OP.RESERVED$) = 92  THEN BEGIN     ! Record data found
  IF LEN(OP.OP.RESERVED$) = 0 THEN RETURN      ! Nothing read
  IF LEN(OP.OP.RESERVED$) <> 92 THEN BEGIN     ! Record data found
    SV.LEN = LEN(OP.OP.RESERVED$)
    OP.OP.RESERVED$ = STRING$(92 - SV.LEN, CHR$(0)) + \
                        OP.OP.RESERVED$
  ENDIF ELSE BEGIN
    SV.LEN = 0
  ENDIF
!EIR47791
    EMSS.FBUYAMT = GETN4(OP.OP.RESERVED$, 20)  ! Get FBUY trans amount
    USER$ = MID$(OP.OP.RESERVED$, 25,2)        \ Get FBUY trans count
          + CHR$(0) + CHR$(0)                  !  into 4 byte field
    EMSS.FBUYCNT = GETN4(USER$,0)              ! Get FBUY trans count
    USER$ = MID$(OP.OP.RESERVED$, 27,2)        \ Get FBUY coupon count
          + CHR$(0) + CHR$(0)                  !  into 4 byte field
    EMSS.COUPCNT = GETN4(USER$,0)              ! Get FBUY coupon count
    EMSS.COUPAMT = GETN4(OP.OP.RESERVED$, 28)  ! Get FBUY coupon amount
    EMSS.ITEMPTS = GETN4(OP.OP.RESERVED$, 08)  ! Get Item points
    EMSS.BONSPTS = GETN4(OP.OP.RESERVED$, 12)  ! Get Bonus points
    EMSS.REDMPTS = GETN4(OP.OP.RESERVED$, 16)  ! Get Redeemed points
!AIR47791
!  ENDIF                                       ! IR47791
   IF (SV.LEN <> 0) THEN BEGIN
     OP.OP.RESERVED$ = RIGHT$(OP.OP.RESERVED$, SV.LEN)
   ENDIF
!EIR47791
RETURN

GET.FBUY.RECAP:
!!********************************************************************
!!**  Accumulate frequent buyer data from file data                 **
!!********************************************************************
!AIR47791
! IF LEN(OP.OP.RESERVED$) = 92  THEN BEGIN     ! Record data found
  IF LEN(OP.OP.RESERVED$) = 0 THEN RETURN      ! Nothing read
  IF LEN(OP.OP.RESERVED$) <> 92 THEN BEGIN     ! Record data found
    SV.LEN = LEN(OP.OP.RESERVED$)
    OP.OP.RESERVED$ = STRING$(92 - SV.LEN, CHR$(0)) + \
                        OP.OP.RESERVED$
  ENDIF ELSE BEGIN
    SV.LEN = 0
  ENDIF
!EIR47791
    EMSS.FBUYAMT = EMSS.FBUYAMT                \
                 + GETN4(OP.OP.RESERVED$, 20)  ! Get FBUY trans amount
    USER$ = MID$(OP.OP.RESERVED$, 25,2)        \ Get FBUY trans count
          + CHR$(0) + CHR$(0)                  !  into 4 byte field
    EMSS.FBUYCNT = EMSS.FBUYCNT                \
                 + GETN4(USER$,0)              ! Get FBUY trans count
    USER$ = MID$(OP.OP.RESERVED$, 27,2)        \ Get FBUY coupon count
          + CHR$(0) + CHR$(0)                  !  into 4 byte field
    EMSS.COUPCNT = EMSS.COUPCNT                \
                 + GETN4(USER$,0)              ! Get FBUY coupon count
    EMSS.COUPAMT = EMSS.COUPAMT                \
                 + GETN4(OP.OP.RESERVED$, 28)  ! Get FBUY coupon amount
    EMSS.ITEMPTS = EMSS.ITEMPTS                \
                 + GETN4(OP.OP.RESERVED$, 08)  ! Get item points
    EMSS.BONSPTS = EMSS.BONSPTS                \
                 + GETN4(OP.OP.RESERVED$, 12)  ! Get bonus points
    EMSS.REDMPTS = EMSS.REDMPTS                \
                 + GETN4(OP.OP.RESERVED$, 16)  ! Get redeemed points
!AIR47791
!  ENDIF                                       ! IR47791
   IF (SV.LEN <> 0) THEN BEGIN
     OP.OP.RESERVED$ = RIGHT$(OP.OP.RESERVED$, SV.LEN)
   ENDIF
!EIR47791
RETURN

GET.RECAP.DATA:
!!********************************************************************
!!**  Sum up data from performance file for recap report            **
!!********************************************************************
  IF PERIOD = 1 THEN BEGIN
    OPEN "EAMPERFC" AS 55 BUFFSIZE 4096 NOWRITE NODEL  ! Open input file
    WORK4% = SIZE("EAMPERFC")/512 - 1            ! Determine file size
  ENDIF
  IF PERIOD = 2 THEN BEGIN
    OPEN "EAMPERFP" AS 55 BUFFSIZE 4096 NOWRITE NODEL  ! Open input file
    WORK4% = SIZE("EAMPERFP")/512 - 1            ! Determine file size
  ENDIF
  IF PERIOD = 3 THEN BEGIN
    OPEN "EAMPERCL" AS 55 BUFFSIZE 4096 NOWRITE NODEL  ! Open input file
    WORK4% = SIZE("EAMPERCL")/512 - 1            ! Determine file size
  ENDIF
  IF PERIOD = 4 THEN BEGIN
    OPEN "EAMPERPL" AS 55 BUFFSIZE 4096 NOWRITE NODEL  ! Open input file
    WORK4% = SIZE("EAMPERPL")/512 - 1            ! Determine file size
  ENDIF
  READ FORM "C512"; #55; WORK$                   ! Read header sector
  EMSS.FBUYAMT = 0                               ! Initialize
  EMSS.FBUYCNT = 0                               !  Recap
  EMSS.COUPCNT = 0                               !   Data
  EMSS.COUPAMT = 0                               !    Accumulators
  EMSS.ITEMPTS = 0
  EMSS.BONSPTS = 0
  EMSS.REDMPTS = 0

  IF END #55 THEN CONTINUE.LOOP                  ! Don't stop till done
  WHILE WORK4%                                   ! While more data
    READ FORM "C4096"; #55; WORK$                ! Read next block
CONTINUE.LOOP:
    WORK4% = WORK4% - 8                          ! Dec sectors left
    IF WORK4% < 0 THEN BEGIN                     ! Overshot end
      WORK  = (8 + WORK4%) * 512                 ! Compute data
      WORK2 = (0 - WORK4%) * 512                 ! Compute junk
      WORK$ = LEFT$(WORK$,WORK)                  \ Keep data
            + STRING$(WORK2,CHR$(0))             !  appended with zeroes
    ENDIF
    IF WORK4% < 1 THEN WORK4% = 0                ! No more work

    FOR I% = 0 TO 3584 STEP 512                  ! For records in block
      IF MID$(WORK$,I%+5,1) = "2" THEN BEGIN     ! If data record
        OP.OP.RESERVED$ = MID$(WORK$,I%+421,92)  ! Get reserved data
        GOSUB GET.FBUY.RECAP                     ! Get coupon variables
      ENDIF
    NEXT I%                                      ! Next record
  WEND                                           ! next block read
  CLOSE 55                                       ! Close file
RETURN

GET.OFFICE.TOTALS:
!!********************************************************************
!!**  Get Frequent buyer office totals for recap report             **
!!********************************************************************
  EMSS.MFRCOUP = 0                               ! Clear CPN totals
  EMSS.STRCOUP = 0
  EMSS.DBLCOUP = 0
  IF NOT SO.STOREACCT THEN RETURN                ! Return if no office
  ON ERROR GOTO FB.ERR

  IF PERIOD = 1 THEN \
    OPEN "EAMACCTC" KEYED RECL 508 AS 55 NOWRITE NODEL  ! Open input file
  IF PERIOD = 2 THEN \
    OPEN "EAMACCTP" KEYED RECL 508 AS 55 NOWRITE NODEL  ! Open input file
  IF PERIOD = 3 THEN \
    OPEN "EAMACCCL" KEYED RECL 508 AS 55 NOWRITE NODEL  ! Open input file
  IF PERIOD = 4 THEN \
    OPEN "EAMACCPL" KEYED RECL 508 AS 55 NOWRITE NODEL  ! Open input file

  WORK$ = ""
  USER$ = "1" + STRING$(5,CHR$(0))
  READ FORM "C508"; #55 KEY USER$; WORK$
  CLOSE 55

  AC.OT.RESERVED$ = RIGHT$(WORK$,172)
  IF LEN(AC.OT.RESERVED$) = 172 THEN BEGIN     ! Record data found
    WORK2$ = STRING$(12, CHR$(0))
    IF MID$(AC.OT.RESERVED$,49,12) NE WORK2$ THEN BEGIN ! CPN totals
      EMSS.MFRCOUP = GETN4(AC.OT.RESERVED$,48) ! Get AUTO MFR CPN amount
      EMSS.STRCOUP = GETN4(AC.OT.RESERVED$,52) ! Get AUTO STR CPN amount
      EMSS.DBLCOUP = GETN4(AC.OT.RESERVED$,56) ! Get DBL CPN amount
    ENDIF
    IF PERIOD > 1 THEN BEGIN                   ! Previous period
      IF OP.DEP.MFR THEN EMSS.MFRCOUP = 0      ! Auto MFR out of office
      IF OP.DEP.STR THEN EMSS.STRCOUP = 0      ! Auto STR out of office
      IF OP.DEP.DBL THEN EMSS.DBLCOUP = 0      ! Auto DBL out of office
    ENDIF                                      ! Previous period
  ENDIF
RETURN

ALTER.AMOUNT:
!!********************************************************************
!!** Get amt from USER$ at I%, add WORK4%, and put new amt in USER$ **
!!********************************************************************
  WORK$ = MID$(USER$,I%,13)                      ! GET AMOUNT TO ALTER
  TEMP4% = 0                                     ! DEFAULT RESULTS
  J% = MATCH("#",WORK$,1)                        ! LOOK FOR NUMERICS
  IF J% THEN BEGIN
    WORK$ = RIGHT$(WORK$,1)                      \ MOVE SIGN AND
        + MID$(WORK$,J%,LEN(WORK$) - J%)         ! STRIP LEADING BLANKS
YY: J% = MATCHB(",",WORK$,1)                     ! LOOK FOR COMMA
    IF J% THEN                                   \ IF FOUND THEN DELETE
      WORK$ = LEFT$(WORK$,J%-1) + RIGHT$(WORK$,LEN(WORK$)-J%) :\
      GOTO YY
ZZ: J% = MATCHB(".",WORK$,1)                     ! LOOK FOR DECIMAL
    IF J% THEN                                   \ IF FOUND THEN DELETE
      WORK$ = LEFT$(WORK$,J%-1) + RIGHT$(WORK$,LEN(WORK$)-J%) :\
      GOTO ZZ
    TEMP4% = VAL(WORK$)                          ! GET VALUE AS INTEGER
  ENDIF
  TEMP4% = TEMP4% + WORK4%                       ! ADD ADJUSTMENT
  WORK$ = MMCFEC06$(TEMP4%,-1,-1)                ! FORMAT NEW AMOUNT
  WORK$ = RIGHT$(WORK2$ + WORK$,13)              ! PAD TO 13 CHARACTERS
  CALL SUBSTR(USER$,I%-1,WORK$,0,13)             ! INSERT DATA IN LINE
RETURN

!!********************************************************************
!!**  Main line code to decide where to put new lines               **
!!********************************************************************
EMSS.STARTFB:
 IF NOT EMSS.READ.DESC THEN BEGIN
     DIM MSG$(13)
     OPEN "EAMEDESC" RECL 49 AS 20 NOWRITE NODEL ! OPEN DESC FILE
     READ #20,1096; MSG$(1)            ! EM SALES LINE
     READ #20,1097; MSG$(2)            ! EM SALES LINE
     READ #20,1098; MSG$(3)            ! EM COUPON LINE
     READ #20,1099; MSG$(4)            ! EM COUPON LINE
     READ #20,1100; MSG$(5)            ! EM POINTS LINE
     READ #20,1101; MSG$(6)            ! EM POINTS LINE
     READ #20,1102; MSG$(7)            ! "ELECTRONIC MFR COUPON  "
     READ #20,1103; MSG$(8)            ! "ELECTRONIC STR COUPON  "
     READ #20,1104; MSG$(9)            ! "DOUBLED COUPON   "
     CLOSE 20                          !
     OPEN "EAMRDESC" RECL 49 AS 20 NOWRITE NODEL ! OPEN DESC FILE
     READ #20,1044;WARN.MORE.THAN.20$  ! read warning msg  IR32118
     READ #20,1045;NO.PRINT.SUBTOTAL$  ! read message pt.  IR32118
     READ #20,1029; MSG$(10)           ! "ITEMS SCANNED          "
     READ #20,1030; MSG$(11)           ! "ITEMS KEYED            "
     READ #20,1001; MSG$(12)           ! "OPERATOR               "
     READ #20,1163; MSG$(13)           ! "TOTALS :               "
     CLOSE 20                          !
     ISPOS2 = MATCH("@",MSG$(10),1)    ! LOCATION WHERE % SCANNED IS PLACED
     EMSS.READ.DESC = -1
 ENDIF

!AIR24723
 IF (  DESTINATION = DISPLAY  AND \        !
       RECAP.REPORT           AND \        !
       UNIT <> 3            ) THEN BEGIN   !
    EMSS.FB.PRINTED = 0                     ! Clear print flag
    EMSS.PRINT.NOW  = 0                     ! Clear print flag
 ENDIF ELSE BEGIN                          !
!EIR24723

   IF LINE.NO < 9 THEN BEGIN                 ! Too soon to print
     EMSS.FB.PRINTED = 0                     ! Clear print flag
     EMSS.PRINT.NOW  = 0                     ! Clear print flag
   ENDIF ELSE BEGIN                          ! Perhaps print now
    IF RECAP.REPORT THEN BEGIN               ! Store totals recap report
      EMSS.PRINT.NOW  = -1                   ! Must print now
    ENDIF ELSE BEGIN                         ! Not totals recap report
      IF DESTINATION NE DISPLAY AND          \ Printed report
         SO.DEPTNUM(1222) = 0 THEN           \ No Dept subtotals
        EMSS.PRINT.NOW  = -1                 ! Must print now
    ENDIF                                    ! Not totals recap report

    IF EMSS.PRINT.NOW THEN BEGIN             ! Immediate print needed

!AIR24723

      IF ( DESTINATION = DISPLAY  AND \       !
           RECAP.REPORT         ) THEN BEGIN  !
       IF MATCH(STRING$(80," "),PAGE.LINE$(LINE.NO - 2, 3),1) THEN BEGIN \  next line blank or
         EMSS.FB.PRINTED = -1                  !
       ENDIF
       IF ("" = PAGE.LINE$(LINE.NO - 2, 3) AND \  next line null and
         LEN(PAGE.LINE$(LINE.NO -3,3)) > 0 AND \  PREVIOUS LINE IS NOT BLANK
         NOT  MATCH(STRING$(80," "),PAGE.LINE$(LINE.NO - 3, 3),1)) THEN BEGIN ! current line not blank
        EMSS.FB.PRINTED = -1                  !
       ENDIF                                  !
      ENDIF ELSE BEGIN                        !

!EIR24723
!      IF MATCH("ITEMS SCANNED   100.",LINE$,40) OR \ Items scanned 100.00%
        MATCH("ITEMS KEYED",LINE$,40) THEN   \ Items keyed line
        EMSS.FB.PRINTED = -1                   ! Print after next blank line

       ISPOS1 = MATCH(LEFT$(MSG$(10),15),LINE$,40) ! Look for "ITEMS SCANNED"
       IF ((ISPOS1 > 0) AND (MID$(LINE$,(ISPOS1+ISPOS2-7),3) = "100")) OR \
          MATCH(LEFT$(MSG$(11),15),LINE$,40) THEN  \ Items keyed line
        EMSS.FB.PRINTED = -1                   ! Print after next blank line

      ENDIF                                   ! Not totals recap report  IR24723

    ENDIF ELSE BEGIN                         ! Not recap report
!  IF MATCH("ITEMS KEYED",LINE$,40) OR     \ Items keyed line or
      MATCH("ITEMS SCANNED",LINE$,40) THEN \  Items scanned line
       EMSS.FB.PRINTED = -1                  ! Print after next blank line

     IF MATCH(LEFT$(MSG$(11),15),LINE$,40) OR   \ Items keyed line or
        MATCH(LEFT$(MSG$(10),15),LINE$,40) THEN \  Items scanned line
       EMSS.FB.PRINTED = -1                  ! Print after next blank line
    ENDIF                                    ! Not recap report
   ENDIF                                     ! Perhaps print now
 ENDIF                                      ! Not totals recap report  IR24723

 IF EMSS.FB.PRINTED THEN BEGIN             ! Time to print totals
  IF EMSS.PRINT.NOW OR                     \ Print now flag
     LINE$ = "" THEN BEGIN                 ! Blank line after key line
   EMSS.FB.PRINTED = 0                     ! Already printed
   IF EMSS.PRINT.NOW THEN BEGIN            ! Print now flag
     EMSS.PRINT.NOW  = 0                   ! Clear print flag
     USER$ = LINE$                         ! Move final line
     GOSUB WRITE.LINE                      ! Output final line
   ENDIF                                   ! Print now flag
   USER$ = NULL$                           ! Blank line
   GOSUB WRITE.LINE                        ! Output blank line
   IF RECAP.REPORT THEN BEGIN              ! Recap report
     GOSUB GET.RECAP.DATA                  !  so get recap data
   ENDIF ELSE BEGIN                        ! single report
     GOSUB GET.FBUY.DATA                   !  so get data from perf file
   ENDIF
   EMSS.TOTLAMT = OP.OP.GROSSPOS - OP.OP.GROSSNEG ! Get total amount
   EMSS.TOTLCNT = OP.OP.NUMTRANS              ! Get total count
   EMSS.NOFBAMT = EMSS.TOTLAMT - EMSS.FBUYAMT ! Get non-FB amount
   EMSS.NOFBCNT = EMSS.TOTLCNT - EMSS.FBUYCNT ! get not-FB count
   EMSS.TOTLPTS = EMSS.ITEMPTS + EMSS.BONSPTS ! Get total points
   IF EMSS.ALREADY.DONE2 THEN EXIT SUB     ! IR30509
   GOSUB PRINT.FBUY.LINES                  ! Format and print lines
   EXIT SUB                                ! Avoid reprint of input
  ENDIF
 ENDIF

!!********************************************************************
!!**  Add operator name next to operator number where appropriate   **
!!********************************************************************
!IF LEFT$(LINE$,8) = "OPERATOR" THEN BEGIN    ! OPERATOR NUMBER
 IF LEFT$(LINE$,8) = LEFT$(MSG$(12),8) THEN BEGIN    ! OPERATOR NUMBER
   I% = MATCH("#",LINE$,9)                    ! LOOK FOR NUMERICS
   IF I% THEN BEGIN                           ! IF PRESENT THEN
     J% = MATCHB(" ",LINE$,I%)                ! LOOK FOR BLANK
     IF J% = 0 THEN J% = LEN(LINE$) + 1       ! OR FOR EOL
     EMSS.OPER$ = MID$(LINE$,I%,J%-I%)        ! GET OPERATOR
     EMSS.OPER$ = STR$(VAL(EMSS.OPER$))       ! DELETE BLANKS
     EMSS.OPER$ = PACK$(RIGHT$("000000000"    \ FORMAT TO 10
                + EMSS.OPER$,10))             !  PACKED CHARACTERS

! AIR33158 Open the operator authorization file to extract the record length.
!          Use the on error routine, FB.ERR, to find an unused session number
!          if the current one opening EAMOPERA is being used.
     OA.SN = 64
     OA.FILE.NOT.OPEN = -1

     WHILE OA.FILE.NOT.OPEN
       OA.FILE.NOT.OPEN = 0
       OPEN "$AMOPERA" DIRECT RECL 512 AS OA.SN NOWRITE NODEL
     WEND

     ! read op auth file to extract the record length
     READ FORM " T47 I2 C464 "; #OA.SN, 1; OA.RECL, UNNEEDED$

     CLOSE OA.SN   ! Close op auth direct file

     OA.SN = 0     ! Reset variable for on error condition
! EIR33158

     IF END #44 THEN FILE.ERROR               ! IGNORE N.O.F. ERROR
     EMSS.REC$ = ""                           ! ASSUME NO DATA
     IF NOT EMSS.OPER.OPEN THEN BEGIN         ! NOT ALREADY OPEN

! AIR33158 Use variable record length when opening file.
!      OPEN "$AMOPERA" KEYED RECL 72 AS 44 NOWRITE NODEL  ! OPEN FILE
       OPEN "$AMOPERA" KEYED RECL OA.RECL AS 44 NOWRITE NODEL  ! OPEN FILE
! EIR33158

       EMSS.OPER.OPEN = -1
     ENDIF

! AIR33158 Use the variable record length in the read
!    READ FORM "C72"; #44 KEY EMSS.OPER$; EMSS.REC$ ! READ RECORD
     OPA.FMT$ = "C" + STR$(OA.RECL)
     READ FORM OPA.FMT$; #44 KEY EMSS.OPER$; EMSS.REC$ ! READ RECORD
! EIR33158

FILE.ERROR:
     EMSS.OPER$ = MID$(EMSS.REC$,33,20)       ! GET OPERATOR NAME
     LINE$ = LEFT$(LINE$,J%-1)                ! LIMIT LINE
     LINE$ = LINE$ + "     " + EMSS.OPER$     ! APPEND NAME TO LINE
   ENDIF
 ENDIF
!AIR31828
 IF LINE.NO < 3 THEN BEGIN             ! 1ST 2 LINES
   EMSS.ALREADY.DONE = 0               !
   EMSS.ALREADY.DONE2 = 0              !
 ENDIF
!EIR31828
!AIR32118 WHEN MORE THAN 1 OP WOULD APPEAR ON ONE PAGE SWITCH NEEDS
!         TO BE RESET WHEN EITHER OF THESE MESSAGES APPEAR.
IF MATCH(NO.PRINT.SUBTOTAL$,LINE$,1) OR \
   MATCH(WARN.MORE.THAN.20$,LINE$,1) THEN BEGIN
  EMSS.ALREADY.DONE = 0               !
  EMSS.ALREADY.DONE2 = 0              !
ENDIF
!EIR32118

IF RECAP.REPORT AND                    \ STORE RECAP REPORT
   PERIOD > 1 THEN BEGIN               ! NOT CURRENT PERIOD
!!********************************************************************
!!**  Get descriptors for store and manufacturer coupons            **
!!********************************************************************
 IF LINE.NO < 3 THEN BEGIN             ! 1ST 2 LINES
!  EMSS.ALREADY.DONE = 0               ! IR30509 IR31828
!  EMSS.ALREADY.DONE2 = 0              ! IR30509 IR31828
   IF STRCPN.NAME$ = "" OR             \ NO DATA YET
      MFRCPN.NAME$ = "" OR             \ IR95959
      SAV.OPERTERM$ NE STR$(PERIOD) THEN BEGIN ! NEW PERIOD IR95959
     SAV.OPERTERM$ = STR$(PERIOD)      ! SAVE PERIOD IR95959
     USER$ = LINE$                     ! GET CURRENT LINE
     GOSUB WRITE.LINE                  ! WRITE THE LINE
     %INCLUDE EAMEMCVC.J86             ! Mfr Cpn Variety (if enabled) IR39149
     OPEN "EAMSDESC" RECL 49 AS 20 NOWRITE NODEL ! OPEN DESC FILE
     READ #20,7; MFRCPN.NAME$          ! GET MFR COUPON NAME
     READ #20,8; STRCPN.NAME$          ! GET STR COUPON NAME
!AIR39149
     MFRCPN.NAME$ = LEFT$((MFRCPN.NAME$ + \ Ensure Mfr Cpn descriptor
                    STRING$(18," ")),18)  !  is 18 bytes
     IF (EMSS.EMC.VAR > 0) AND            \ If variety for E-Mfr cpns
        (EMSS.EMC.VAR < 7) THEN BEGIN     !  is valid
       READ #20, (1135 + EMSS.EMC.VAR);   \ Get the appropriate
                  MFRCPN.VAR$             !  descriptor from sdesc
       MFRCPN.VAR$ = LEFT$((MFRCPN.VAR$ + \ Ensure the descriptor is
                     STRING$(18," ")),18) !  18 bytes
     ENDIF                                ! Valid Variety
!EIR39149
     CLOSE 20                          !
     IF PGM.NAME$ = "" THEN            \ NO PROGRAM NAME     IR97503
       GOSUB GET.OPTIONS               ! READ IN OPTIONS     IR97503

     GOSUB GET.OFFICE.TOTALS
     EXIT SUB                          ! AVOID REPRINT OF INPUT
   ENDIF
 ENDIF

 IF (LINE.NO > 8) THEN BEGIN                  ! At line 9 - 21
!!********************************************************************
!!**  Alter manufacturer coupon line if needed                      **
!!********************************************************************
  IF EMSS.MFRCOUP THEN BEGIN                ! AUTO MFR COUPONS PRESENT
!AIR39149
!   IF MID$(LINE$,3,10) = LEFT$(MFRCPN.NAME$,10) AND \ RIGHT LINE
! Match on the full descriptor so as to not confuse this
! line with the TBV Mfr Cpn Lines
    IF MID$(LINE$,3,18) = LEFT$(MFRCPN.NAME$,18) AND \ RIGHT LINE
\EIR39149
       MID$(LINE$,40,40) NE " " THEN BEGIN  ! WITH DATA
      WORK2$ = STRING$(12," ")              ! 12 BLANKS
      USER$ = LINE$                         ! GET LINE TO ALTER
      I% = 66                               ! NET OFFSET
      WORK4% = - EMSS.MFRCOUP               ! NET ADJUSTMENT
      GOSUB ALTER.AMOUNT                    ! SUBTRACT FROM NET

      GOSUB WRITE.LINE                      ! WRITE THE LINE
      EMSS.CPN.ALTERED = -1                 ! Coupon line altered
      EXIT SUB                              ! Avoid print of input
    ENDIF
!AIR39149 - This section will handle altering the variety
!           line of Mfr Coupons (if enabled).  The first condition
!           looks for a match starting at column 3 for the display
!           report.  For the print report, the descriptor starts
!           in column 4.  The same math is performed here as
!           above for the main tender.
    IF (MID$(LINE$,3,18) = LEFT$(MFRCPN.VAR$,18) OR  \  Right display Line OR
        MID$(LINE$,4,18) = LEFT$(MFRCPN.VAR$,18)) AND \ Right Print Line
       MID$(LINE$,40,40) NE " " THEN BEGIN  ! WITH DATA
      WORK2$ = STRING$(12," ")              ! 12 BLANKS
      USER$ = LINE$                         ! GET LINE TO ALTER
      I% = 66                               ! NET OFFSET
      WORK4% = - EMSS.MFRCOUP               ! NET ADJUSTMENT
      GOSUB ALTER.AMOUNT                    ! SUBTRACT FROM NET

      GOSUB WRITE.LINE                      ! WRITE THE LINE
      EMSS.CPN.ALTERED = -1                 ! Coupon line altered
      EXIT SUB                              ! Avoid print of input
    ENDIF                                   ! E-Mfr Cpn Variety
!EIR39149
  ENDIF

!!********************************************************************
!!**  Alter store coupon line if needed                             **
!!********************************************************************
  IF EMSS.STRCOUP OR EMSS.DBLCOUP THEN BEGIN ! AUTO STR COUPON AVAILABLE
    IF MID$(LINE$,3,10) = LEFT$(STRCPN.NAME$,10) AND \ RIGHT LINE
       MID$(LINE$,40,40) NE " " THEN BEGIN  ! WITH DATA
      WORK2$ = STRING$(12," ")              ! 12 BLANKS
      USER$ = LINE$                         ! GET LINE TO ALTER
      I% = 66                               ! NET OFFSET
      WORK4% = -(EMSS.STRCOUP+EMSS.DBLCOUP) ! NET ADJUSTMENT
      GOSUB ALTER.AMOUNT                    ! SUBTRACT FROM NET

      GOSUB WRITE.LINE                      ! WRITE THE LINE
      EMSS.CPN.ALTERED = -1                 ! Coupon line altered
      EXIT SUB                              ! Avoid print of input
    ENDIF
  ENDIF

!!********************************************************************
!!**  Alter tender total line if needed                             **
!!********************************************************************
!AIR42700 Need to limit access to ALTER.AMOUNT if this is a TBV (F8)
! and we are enhanced TBV.  Show only selected tender total not affected
!  by any coupons in 'tender on hand' column.
!  IF EMSS.STRCOUP OR EMSS.DBLCOUP OR       \ AUTO STR COUPON PRESENT
!     EMSS.MFRCOUP THEN BEGIN               ! AUTO MFR COUPON PRESENT
  IF ((EMSS.STRCOUP)  OR                    \ AUTO STR COUPON AMOUNT PRESENT
      (EMSS.DBLCOUP)  OR                    \ AUTO DBL COUPON AMOUNT PRESENT
      (EMSS.MFRCOUP)) AND                   \ AUTO MFR COUPON AMOUNT PRESENT
      NOT (F8.PRESSED)  THEN BEGIN          \ USED FOR ENH TBV TENDER TOTALS
!EIR42700 END limiting access ALTER.AMOUNT

!   IF LEFT$(LINE$,8) = "TOTALS :" THEN BEGIN ! RIGHT LINE
    IF LEFT$(LINE$,8) = LEFT$(MSG$(13),8) THEN BEGIN ! RIGHT LINE
      WORK4% =  EMSS.MFRCOUP                \ TOTAL NET ADJUSTMENT
             +  EMSS.STRCOUP                \   TO GO TO ONHAND
             +  EMSS.DBLCOUP
      IF WORK4% THEN BEGIN                  ! ADJUSTMENTS TO NET
        WORK2$ = STRING$(12," ")            ! 12 BLANKS
        USER$ = LINE$                       ! GET LINE TO ALTER
        I% = 51                             ! ONHAND OFFSET
        GOSUB ALTER.AMOUNT                  ! ADD TO ON HAND
        I% = 66                             ! NET OFFSET
        WORK4% = -WORK4%                    ! NET ADJUSTMENT
        GOSUB ALTER.AMOUNT                  ! SUBTRACT FROM NET
        GOSUB WRITE.LINE                    ! WRITE THE LINE
        EXIT SUB                            ! Avoid print of input
      ENDIF
    ENDIF
  ENDIF

!!********************************************************************
!!**  Insert new tender lines as needed for auto or doubled coupons **
!!********************************************************************
IF EMSS.ALREADY.DONE = 0 THEN BEGIN         ! IR30509
  IF EMSS.CPN.ALTERED THEN BEGIN            ! Coupon line altered
   IF LINE$ = "" THEN BEGIN                 ! BLANK LINE
    EMSS.ALREADY.DONE = -1                  ! IR30509
    EMSS.CPN.ALTERED = 0                    ! Coupon lines shown
    EMSS.DEF$ = STRING$(79," ")             ! DEFAULT NEW LINE
!   WORK$ = ".00"                           ! WITH ZERO AMOUNTS
    WORK$ = MMCFEC06$(0,-1,-1)              ! WITH ZERO AMOUNTS
    IF RIGHT$(WORK$,1) = " " THEN
       WORK$ = LEFT$(WORK$,LEN(WORK$) - 1)  ! STRIP TRAILING BLANK
    WORK$ = RIGHT$("  " + WORK$,3)          ! ENSURE LENGTH = 3
!!? CALL SUBSTR(EMSS.DEF$,45,WORK$,0,3)     ! INITIALIZE PICKUPS
    CALL SUBSTR(EMSS.DEF$,59,WORK$,0,3)     ! INITIALIZE ONHAND
    CALL SUBSTR(EMSS.DEF$,74,WORK$,0,3)     ! INITIALIZE NET
    WORK2$ = STRING$(12," ")                ! 12 BLANKS

    IF EMSS.MFRCOUP THEN BEGIN              ! AUTO MFR COUPONS
      USER$ = EMSS.DEF$                     ! DEFAULT NEW LINE
!     WORK$ = "ELECTRONIC " + MFRCPN.NAME$  ! DESCRIPTOR
      WORK$ = MSG$(7)                       ! DESCRIPTOR
      CALL SUBSTR(USER$,2,WORK$,0,LEN(WORK$)) ! INSERT IN LINE
      I% = 51                               ! ONHAND OFFSET
      WORK4% = EMSS.MFRCOUP                 ! ON HAND ADJUSTMENT
      GOSUB ALTER.AMOUNT                    ! ADD TO ON HAND
      GOSUB WRITE.LINE                      ! WRITE THE LINE
    ENDIF

    IF EMSS.STRCOUP THEN BEGIN              ! AUTO STR COUPONS
      USER$ = EMSS.DEF$                     ! DEFAULT NEW LINE
!     WORK$ = "ELECTRONIC " + STRCPN.NAME$  ! DESCRIPTOR
      WORK$ = MSG$(8)                       ! DESCRIPTOR
      CALL SUBSTR(USER$,2,WORK$,0,LEN(WORK$)) ! INSERT IN LINE
      I% = 51                               ! ONHAND OFFSET
      WORK4% = EMSS.STRCOUP                 ! ONHAND ADJUSTMENT
      GOSUB ALTER.AMOUNT                    ! ADD TO ON HAND
      GOSUB WRITE.LINE                      ! WRITE THE LINE
    ENDIF

    IF EMSS.DBLCOUP THEN BEGIN              ! DBL COUPONS
      USER$ = EMSS.DEF$                     ! DEFAULT NEW LINE
!     WORK$ = "DOUBLED COUPON   "           ! DESCRIPTOR
      WORK$ = MSG$(9)                       ! DESCRIPTOR
      CALL SUBSTR(USER$,2,WORK$,0,LEN(WORK$)) ! INSERT IN LINE
      I% = 51                               ! ONHAND OFFSET
      WORK4% = EMSS.DBLCOUP                 ! ONHAND ADJUSTMENT
      GOSUB ALTER.AMOUNT                    ! ADD TO ON HAND
      GOSUB WRITE.LINE                      ! WRITE THE LINE
    ENDIF
   ENDIF                                    ! BLANK LINE
  ENDIF                                     ! IR30509 ALREADY DONE
  ENDIF                                     ! COUPONS ALTERED
 ENDIF                                      ! LINE > 9
ENDIF                                       ! PP STORE RECAP

EMSS.ENDFB:
!         END OF USER EXIT CODE
\ REM!!****************************************************************
