\/* TIME STAMP BLOCK ************************************************
\* END OF TIME STAMP BLOCK *****************************************/
!***** Copy over EAMRPU01.J86 for compile *************************!!
! TITLE: Electronic Marketing Support
!
!!  ????-??? THIS MODULE IS "RESTRICTED MATERIALS OF IBM"
!!  (c) COPYRIGHT IBM CORP 1996 ALL RIGHTS RESERVED LICENSED MATERIALS
!!  PROPERTY OF IBM REFER TO COPYRIGHT INSTRUCTIONS FORM NUMBER G120-2083
!!
!!   IR29169 - If Terminal Accountability is used and All Unprinted,
!!             or All Available reports is selected and more than
!!             one terminal is found, the Electronic Marketing
!!             data is only printed/displayed for the first terminal.
!!             CMJ MGV-A 18Apr95
!!
!!   IR33158 - Add EM support for the expanded operator authorization
!!             feature.
!!             LTG MGVA 25Sept96
!!
!!   IR34954 - When cash report is run and the Enhancement package
!!             is installed with tender by variety turned on, the
!!             electronic & double coupon lines print twice on the
!!             printed / filed version of the report.
!!             RSH MGVA 28Apr97
!!
!!   IR36257 - PEIR34954.  Previous apar caused the report to put data
!!             in the field reserved for "Page Down" (data overflows) when
!!             all tenders are shown on the report and the operator also
!!             has Electronic MFR, Electronic Str, and Double Coupons.
!!             RSH MGVA 19Aug97
!!
!!   IR37892 - Make report NLS compliant by comparing line$ data to
!!             a descriptor instead of hard-coded text in order to
!!             determine if the totals line is being printed.
!!             RSH MGVA 11May98
!!
!!   IR39149 - Add support for Base Enhancement for reporting
!!             manufacturer coupons by variety. Co-req IR39147.
!!             RSH MGVA 12Nov98
!!
!!   IR39810 - Ensure that only the Electronic Manufacturer coupons
!!             are printed when the variety screen for Enhanced
!!             MFR coupons is displayed.
!!             RSH MGVA 10Feb99
!!
!!   IR40876 - The Frequent Buyer additional data lines will print
!!             twice if the enhancement feature causes the report
!!             for a single operator to span two pages.
!!             RSH MGVA 28Jun99
!!
!!   IR47791 - CoRequisite APAR for Value Pack 2001 which used
!!             four (4) bytes of reserved space.  This allows
!!             Electronic Marketing to be compatible with the
!!             new product.
!!             CMJ MGVA 21Feb2002
!!
!!   IR48470 - When printing a Cash Report, Preferred Customer
!!             data can appear more than once for an operator
!!             or terminal if Miscellaneous Sales items were
!!             reported.  This change suppresses duplicate P.C.
!!             reports for the same entity.
!!             GGK IBM  14Jun2002
!!
!!   IR49019 - When displaying a Cash Report, preferred customer
!!             data can appear more than once for an operator.
!!             Note the fix has a co-req of IR48979
!!             CRM IBM  21Aug2002
!!
!!   IR53673 - When displaying Tender By Variety in the Office Cash
!!             Report, the totals line was being incorrectly adjusted
!!             by the amount of electronic coupons.
!!             GGK IBM  03May2004
!!
!!   IO00534 - A terminal cash report shows wrong values for electronic
!!             and doubled coupons after using PgUp.
!!             GGK IBM  02Mar2004
!!
!!*END-OF-SPECIFICATIONS*********************************************
!!*******************************************************************
!!** FREQUENT BUYER REPORT PROCESSING FOR THE CASH REPORT          **
!!*******************************************************************

 IF DESTINATION = 1 AND                   \ Destination = display
    LINE.NO > 21 THEN BEGIN               ! Line is off of screen
   LINE.NO = LINE.NO + 1                  ! bump line number
END.IT:
   EXIT SUB                               ! Don't display excess
 ENDIF
 ON ERROR GOTO FB.ERR
IF OP.NO.EM THEN GOTO EMSS.ENDFB          ! No EM processing
GOTO EMSS.STARTFB

!!********************************************************************
!!**  Handle errors encountered in the exit code                    **
!!********************************************************************
FB.ERR:

! AIR33158 Error handling of opening EAMOPERA direct.  This is for the
!          possibility that the session number is already being used.
 IF (ERR = "DF") AND (OA.SN > 0) THEN BEGIN
   OA.SN = OA.SN - 1
   OA.FILE.NOT.OPEN = -1
   RESUME
 ENDIF
! EIR33158

 IF ERR NE "CU" THEN       \ Not expected error
 CALL ADXERROR( 0,0,0,3,2, \ Log Error
      "FB"+RIGHT$("00"+STR$(ERRF%),2)+ERR+ERRNHEX$)
 IF ERR = "RN" THEN RESUME END.IT
RESUME

PRINT.FBUY.LINES:
!!********************************************************************
!!**  Format and write new print lines                              **
!!********************************************************************
!!  XXXXXXXXXXXXXXXXXXXX             XXXXXXXXXXX
!! "  PREFERRED CUSTOMER SALES xxxxx/xxx,xxx.xx  xxx.x% OF ORDER"
!!  123456789012345678901234567890123456789012345678901234567890
!!           1         2         3         4         5         6
!! "S  xxx.x% OF VOLUME "
!!  12345678901234567890
!!           7         8
!!IF EMSS.FBUYAMT NE 0 AND                       Non-zero amount
  IF EMSS.FBUYCNT NE 0 THEN BEGIN              ! Non-zero count
    WORK$ = ""
!   USER$ = LEFT$(PGM.NAME$ + STRING$(20," "),20) \ Format name = 20
!         + " SALES "                          ! ADD descriptor = 27
    USER$ = MSG$(1) + MSG$(2)
    WORK$ = RIGHT$("    " + STR$(EMSS.FBUYCNT),5) ! Format count = 5
!   USER$ = USER$ + WORK$ + "/"                ! Merge with "/"   = 33
    J% = MATCH("%Ecnt",USER$,1)                ! LOCATE START
    CALL SUBSTR(USER$,J%-1,WORK$,0,5)          ! REPLACE VARIABLE
    WORK$ = MMCFEC06$(EMSS.FBUYAMT,-1,-1)      ! Format amount
    IF RIGHT$(WORK$,1) = " " THEN
       WORK$ = LEFT$(WORK$,LEN(WORK$) - 1)     ! STRIP TRAILING BLANK
    WORK$ = LEFT$(WORK$ + "         ",11)      ! Pad amount to 11 chars.
!   USER$ = USER$ + WORK$ + " "                ! Merge with blank = 45
    J% = MATCH("%Electr_amt",USER$,1)          ! LOCATE START
    CALL SUBSTR(USER$,J%-1,WORK$,0,11)         ! REPLACE VARIABLE
    WORK$ = ?PCT$(EMSS.FBUYCNT,EMSS.TOTLCNT)   ! Compute % of orders
!   USER$ = USER$ + WORK$ + " OF ORDERS  "     ! Merge with desc = 63
    J% = MATCH("%Ecpr",USER$,1)                ! LOCATE START
    CALL SUBSTR(USER$,J%-1,WORK$,0,5)          ! REPLACE VAR, Only use 5 chars
    WORK$ = ?PCT$(EMSS.FBUYAMT,EMSS.TOTLAMT)   ! Compute % of sales
!   USER$ = USER$ + WORK$ + " OF VOLUME "      ! Merge with desc = 80
    J% = MATCH("%Eapr",USER$,1)                ! LOCATE START
    CALL SUBSTR(USER$,J%-1,WORK$,0,5)          ! REPLACE VAR, Only use 5 chars
    GOSUB WRITE.LINE                           ! WRITE THE LINE
!!
!! "                   COUPONS xxxxx/xx,xxx.xx  $xxx.xx AVERAGE "
!!  123456789012345678901234567890123456789012345678901234567890
!!           1         2         3         4         5         6
!! "SALE  (vs. $xxx.xx)  "
!!  12345678901234567890
!!           7         8
!   USER$ = "                   COUPONS "      ! Descriptor = 27
    USER$ = MSG$(3) + MSG$(4)
    WORK$ = RIGHT$("    " + STR$(EMSS.COUPCNT),5) ! Format count = 5
!   USER$ = USER$ + WORK$ + "/"                ! Merge with "/"   = 33
    J% = MATCH("%Ecct",USER$,1)                ! LOCATE START
    CALL SUBSTR(USER$,J%-1,WORK$,0,5)          ! REPLACE VARIABLE
    WORK$ = MMCFEC06$(EMSS.COUPAMT,-1,-1)      ! Format amount
    IF RIGHT$(WORK$,1) = " " THEN
       WORK$ = LEFT$(WORK$,LEN(WORK$) - 1)     ! STRIP TRAILING BLANK
    WORK$ = LEFT$(WORK$ + "         ",10)      ! Pad amount to 10 chars.
!   USER$ = USER$ + WORK$ + " "                ! Merge with blank = 44
    J% = MATCH("%Eleccpamt",USER$,1)           ! LOCATE START
    CALL SUBSTR(USER$,J%-1,WORK$,0,10)         ! REPLACE VARIABLE
    WORK4% = EMSS.FBUYAMT/EMSS.FBUYCNT         ! Compute FB order size
!   WORK$ = RIGHT$("    $" + STR$(WORK4%),6)   ! Format average
!   WORK$ = LEFT$(WORK$,4) + "."               \  with 1 decimal
!         + RIGHT$(WORK$,2) + " "              !   and blank = 8
    WORK$ = MMCFEC06$(WORK4%,-1,-1)            ! Format amount
    IF RIGHT$(WORK$,1) = " " THEN
       WORK$ = LEFT$(WORK$,LEN(WORK$) - 1)     ! STRIP TRAILING BLANK
    WORK$ = RIGHT$("     " + WORK$,6)          ! Format average
!   USER$ = USER$ + WORK$ + "AVERAGE SALE  "   ! Merge with desc = 66
    J% = MATCH("%Elavg",USER$,1)               ! LOCATE START
    CALL SUBSTR(USER$,J%-1,WORK$,0,6)          ! REPLACE VARIABLE
    IF EMSS.NOFBCNT THEN BEGIN                 ! If not all preferred
      WORK4% = EMSS.NOFBAMT/EMSS.NOFBCNT       ! Compute NFB order size
!     WORK$ = RIGHT$("    (vs. $" + STR$(WORK4%),11) ! Format average
!     WORK$ = LEFT$(WORK$,9) + "."             \  with 1 decimal
!           + RIGHT$(WORK$,2) + ")"            !   and paren = 13
      WORK$ = MMCFEC06$(WORK4%,-1,-1)          ! Format amount
      IF RIGHT$(WORK$,1) = " " THEN
         WORK$ = LEFT$(WORK$,LEN(WORK$) - 1)   ! STRIP TRAILING BLANK
      WORK$ = RIGHT$("     " + WORK$,6)        ! Format average
      J% = MATCH("%Neavg",USER$,1)             ! LOCATE START
      CALL SUBSTR(USER$,J%-1,WORK$,0,6)        ! REPLACE VARIABLE
!     USER$ = USER$ + WORK$ + " "              ! Merge with blanks = 80
    ENDIF ELSE BEGIN
      WORK$ = MMCFEC06$(0,-1,-1)               ! Format amount
      IF RIGHT$(WORK$,1) = " " THEN
         WORK$ = LEFT$(WORK$,LEN(WORK$) - 1)   ! STRIP TRAILING BLANK
      WORK$ = RIGHT$("     " + WORK$,6)        ! Assure length = 6
      J% = MATCH("%Neavg",USER$,1)             ! LOCATE START
      CALL SUBSTR(USER$,J%-1,WORK$,0,6)        ! REPLACE VARIABLE
    ENDIF
    GOSUB WRITE.LINE                           ! WRITE THE LINE
!!
!! "        POINTS xxx,xxx.xx SALES xxx,xxx.xx BONUS xxx% xxx,xx"
!!  123456789012345678901234567890123456789012345678901234567890
!!           1         2         3         4         5         6
!! "x.xx REDEEMED xxxx%
!!  12345678901234567890
!!           7         8
    IF (EMSS.ITEMPTS > 0 AND                   \ Sales points
        OP.PPAMT NE OP.AMTPP) OR               \  not just like sales
       EMSS.BONSPTS OR EMSS.REDMPTS THEN BEGIN ! or Bonus/Redeem points
!     USER$ = "        POINTS "                ! Descriptor = 15
      USER$ = MSG$(5) + MSG$(6)
      WORK$ = ?PTS$(EMSS.ITEMPTS)              ! Format item points = 10
!     USER$ = USER$ + WORK$ + " SALES "        ! Merge with desc  = 32
      J% = MATCH("%Totpoints",USER$,1)         ! LOCATE START
      CALL SUBSTR(USER$,J%-1,WORK$,0,10)       ! REPLACE VARIABLE
      WORK$ = ?PTS$(EMSS.BONSPTS)              ! Format bonus points =10
!     USER$ = USER$ + WORK$ + " BONUS "        ! Merge with " "   = 49
      J% = MATCH("%Bonpoints",USER$,1)         ! LOCATE START
      CALL SUBSTR(USER$,J%-1,WORK$,0,10)       ! REPLACE VARIABLE
      IF EMSS.TOTLPTS THEN BEGIN               ! More than redeemed
        WORK4% = EMSS.TOTLPTS * 10             ! Round at whole %
        WORK$ = ?PCT$(EMSS.BONSPTS,WORK4%)     ! Compute % of points
        WORK$ = MID$(WORK$,2,2) +RIGHT$(WORK$,2) ! Format as 4 chars
!       WHILE LEFT$(WORK$,1) = " "             ! Strip leading blanks
!         WORK$ = RIGHT$(WORK$,LEN(WORK$)-1)
!       WEND
        J% = MATCH("%Bn",USER$,1)              ! LOCATE START
        CALL SUBSTR(USER$,J%-1,WORK$,0,3)      ! REPLACE VAR, Only use 3 chars
!       USER$ = USER$ + WORK$ + " "            ! Merge with desc  = 54
      ENDIF
      WORK$ = ?PTS$(EMSS.REDMPTS)              ! Format redeemed = 10
!     USER$ = USER$ + WORK$ + " REDEEMED "     ! Merge with " "   = 74
      J% = MATCH("%Redpoints",USER$,1)         ! LOCATE START
      CALL SUBSTR(USER$,J%-1,WORK$,0,10)       ! REPLACE VARIABLE
      IF EMSS.TOTLPTS THEN BEGIN               ! More than redeemed
        WORK4% = EMSS.TOTLPTS * 10             ! Round at whole %
        WORK$ = ?PCT$(EMSS.REDMPTS,WORK4%)     ! Compute % of points
        WORK$ = MID$(WORK$,1,3) +RIGHT$(WORK$,2) ! Format as 5 chars
!       WHILE LEFT$(WORK$,1) = " "             ! Strip leading blanks
!         WORK$ = RIGHT$(WORK$,LEN(WORK$)-1)
!       WEND
        J% = MATCH("%Rdp",USER$,1)             ! LOCATE START
        CALL SUBSTR(USER$,J%-1,WORK$,0,4)      ! REPLACE VARIABLE
!       USER$ = USER$ + WORK$                  ! Merge with desc  = 79
      ENDIF
!     WORK2$ = STRING$(12," ")                 ! 12 BLANKS
!     USER$ = RIGHT$(WORK2$ + USER$,79)        ! RIGHT JUSTIFY A BIT
      GOSUB WRITE.LINE                         ! WRITE THE LINE
    ENDIF
  ENDIF
RETURN

WRITE.LINE:
!!********************************************************************
!!**  Write line to display, printer, or file                       **
!!********************************************************************
  IF DESTINATION = DISPLAY THEN BEGIN        ! Display needed
    IF LINE.NO > 21 THEN RETURN              ! Don't overflow display
    CALL MMCFEC05(POSF(LINE.NO),"CF3")       ! position cursor
    CALL MMCFEC05(PUTF(USER$),"CF7")         ! display string
  ENDIF ELSE BEGIN                           ! write to printer/file
    FORMAT$ = "C" + STR$(LEN(USER$)) + ",C2" ! get format string
    WRITE FORM FORMAT$;#1;USER$,SKIP$        ! write string
  ENDIF
  LINE.NO = LINE.NO + 1                      ! bump line number
RETURN

GET.FBUY.TOTALS:
!!********************************************************************
!!**  Get Frequent buyer totals from file for a single record       **
!!********************************************************************
  EMSS.FBUYAMT = 0                               ! Clear FBUY amts
  EMSS.FBUYCNT = 0
  EMSS.COUPCNT = 0                               ! Clear FBUY CPN amts
  EMSS.COUPAMT = 0
  EMSS.ITEMPTS = 0                               ! Clear FBUY points
  EMSS.BONSPTS = 0
  EMSS.REDMPTS = 0
  EMSS.MFRCOUP = 0                               ! Clear CPN totals
  EMSS.STRCOUP = 0
  EMSS.DBLCOUP = 0

!AIR47791
! IF LEN(AC.OT.RESERVED$) = 172 THEN BEGIN     ! Record data found
  IF LEN(AC.OT.RESERVED$) = 0 THEN RETURN      ! Record data NOT found
  IF LEN(AC.OT.RESERVED$) <> 172 THEN BEGIN    ! Record data found
    SV.LEN = LEN(AC.OT.RESERVED$)
    AC.OT.RESERVED$ = STRING$(172 - SV.LEN, CHR$(0)) + \
                        AC.OT.RESERVED$
  ENDIF ELSE BEGIN
    SV.LEN = 0
  ENDIF
!EIR47791

    WORK2$ = STRING$(12, CHR$(0))
    IF MID$(AC.OT.RESERVED$,49,12) NE WORK2$ THEN BEGIN ! CPN totals
      EMSS.MFRCOUP = GETN4(AC.OT.RESERVED$,48) ! Get AUTO MFR CPN amount
      EMSS.STRCOUP = GETN4(AC.OT.RESERVED$,52) ! Get AUTO STR CPN amount
      EMSS.DBLCOUP = GETN4(AC.OT.RESERVED$,56) ! Get DBL CPN amount
      INPT.MFR.ONHAND = AC.OT.TEAMT(7)         ! Get On hand MFR Coupons
      INPT.STR.ONHAND = AC.OT.TEAMT(8)         ! Get On hand STR Coupons
      TEMP4% = EMSS.STRCOUP + EMSS.DBLCOUP     ! TOTAL AUTO STORE CPNS

      IF (AC.OT.INDICAT0 AND 80H) NE 0 OR      \ RECONCILED
         (AC.OT.INDICAT0 AND 6) = 2 THEN BEGIN ! COUNTED IN C.P.
        IF TEMP4% OR EMSS.MFRCOUP THEN BEGIN   ! AUTO COUPONS PRESENT
          IF INPT.MFR.ONHAND < EMSS.MFRCOUP OR \ NOT ENOUGH IN
             INPT.STR.ONHAND < TEMP4% THEN BEGIN ! ON HAND
            AC.OT.INDICAT0 = AC.OT.INDICAT0 AND NOT 2 ! NOT IN COUNTED
            AC.OT.INDICAT0 = AC.OT.INDICAT0 OR 4 ! ASSUME PICKED UP
          ENDIF
        ENDIF
      ENDIF

      J% = 3                                   ! ASSUME IN NET (TO ON-HAND)
      IF (INPT.MFR.ONHAND = EMSS.MFRCOUP AND   \ ON-HAND MATCHES AUTO COUPON
         INPT.STR.ONHAND = TEMP4%) OR          \  OR COUNTED IN C.P.
         (AC.OT.INDICAT0 AND 2) THEN J% = 2    !   SO IN ON-HAND
      IF AC.OT.INDICAT0 AND 4 THEN J% = 1      ! CLOSE DONE SO IN PICKUPS
      IF PERIOD > 1 THEN J% = 1 !! TEMP TEST   ! BYPASS BASE CODE BUG

ADJUST.IT:
      AUTO.CPN.ADJ(J%) = AUTO.CPN.ADJ(J%)      \ ADD MFR CPN TO ADJUSTMENT
                       + EMSS.MFRCOUP
      J% = J% + 3                              ! MOVE TO STR CPNS
      AUTO.CPN.ADJ(J%) = AUTO.CPN.ADJ(J%)      \ ADD STR CPN TO ADJUSTMENT
                       + EMSS.STRCOUP
      J% = J% + 3                              ! MOVE TO DBL CPNS
      AUTO.CPN.ADJ(J%) = AUTO.CPN.ADJ(J%)      \ ADD DBL CPN TO ADJUSTMENT
                       + EMSS.DBLCOUP
      IF OFFICE.REPORT AND J% < 9 THEN         \ Office first pass
        J% = 3 : GOTO ADJUST.IT                ! ADJUST NET ALSO
    ENDIF

    IF OFFICE.REPORT = 0 THEN BEGIN            ! Not office report
      EMSS.FBUYAMT = GETN4(AC.OT.RESERVED$,60) ! Get FBUY trans amount
      USER$ = MID$(AC.OT.RESERVED$,65,2)       \ Get FBUY trans count
            + CHR$(0) + CHR$(0)                !  into 4 byte field
      EMSS.FBUYCNT = GETN4(USER$,0)            ! Get FBUY trans count
      USER$ = MID$(AC.OT.RESERVED$,67,2)       \ Get FBUY coupon count
            + CHR$(0) + CHR$(0)                !  into 4 byte field
      EMSS.COUPCNT = GETN4(USER$,0)            ! Get FBUY coupon count
      EMSS.COUPAMT = GETN4(AC.OT.RESERVED$,68) ! Get FBUY coupon amount
      EMSS.ITEMPTS = GETN4(AC.OT.RESERVED$,36) ! Get item points
      EMSS.BONSPTS = GETN4(AC.OT.RESERVED$,40) ! Get bonus points
      EMSS.REDMPTS = GETN4(AC.OT.RESERVED$,44) ! Get redeemed points
    ENDIF ELSE BEGIN                           ! Office report
      AUTO.CPN.ADJ(1) = -AUTO.CPN.ADJ(1)       ! Invert pickup adjust.
      AUTO.CPN.ADJ(4) = -AUTO.CPN.ADJ(4)       ! Invert pickup adjust.
      AUTO.CPN.ADJ(7) = -AUTO.CPN.ADJ(7)       ! Invert pickup adjust.
      IF PERIOD > 1 THEN BEGIN                 ! Previous period
        IF OP.DEP.MFR THEN AUTO.CPN.ADJ(3) = 0 ! Auto MFR out of office
        IF OP.DEP.STR THEN AUTO.CPN.ADJ(6) = 0 ! Auto STR out of office
        IF OP.DEP.DBL THEN AUTO.CPN.ADJ(9) = 0 ! Auto DBL out of office
      ENDIF                                    ! Previous period
    ENDIF
!AIR47791
! ENDIF
   IF (SV.LEN <> 0) THEN BEGIN
     AC.OT.RESERVED$ = RIGHT$(AC.OT.RESERVED$, SV.LEN)
   ENDIF
!EIR47791
RETURN

GET.RECAP.DATA:
!!********************************************************************
!!**  Sum up data from Accounting file for recap report             **
!!********************************************************************
  IF PERIOD = 1 THEN BEGIN
    OPEN "EAMACCTC" AS 55 BUFFSIZE 4096 NOWRITE NODEL  ! Open input file
    WORK4% = SIZE("EAMACCTC")/512 - 1            ! Determine file size
  ENDIF
  IF PERIOD = 2 THEN BEGIN
    OPEN "EAMACCTP" AS 55 BUFFSIZE 4096 NOWRITE NODEL  ! Open input file
    WORK4% = SIZE("EAMACCTP")/512 - 1            ! Determine file size
  ENDIF
  IF PERIOD = 3 THEN BEGIN
    OPEN "EAMACCCL" AS 55 BUFFSIZE 4096 NOWRITE NODEL  ! Open input file
    WORK4% = SIZE("EAMACCCL")/512 - 1            ! Determine file size
  ENDIF
  IF PERIOD = 4 THEN BEGIN
    OPEN "EAMACCPL" AS 55 BUFFSIZE 4096 NOWRITE NODEL  ! Open input file
    WORK4% = SIZE("EAMACCPL")/512 - 1            ! Determine file size
  ENDIF
  READ FORM "C512"; #55; WORK$                   ! Read header sector
  DIM SUMM.TOTALS(9)                             ! Initialize totals

  IF END #55 THEN CONTINUE.LOOP                  ! Don't stop till done
  WHILE WORK4%                                   ! While more data
    READ FORM "C4096"; #55; WORK$                ! Read next block
CONTINUE.LOOP:
    WORK4% = WORK4% - 8                          ! Dec sectors left
    IF WORK4% < 0 THEN BEGIN                     ! Overshot end
      WORK  = (8 + WORK4%) * 512                 ! Compute data
      WORK2 = (0 - WORK4%) * 512                 ! Compute junk
      WORK$ = LEFT$(WORK$,WORK)                  \ Keep data
            + STRING$(WORK2,CHR$(0))             !  appended with zeroes
    ENDIF
    IF WORK4% < 1 THEN WORK4% = 0                ! No more work

    FOR I% = 0 TO 3584 STEP 512                  ! For records in block
      IF MID$(WORK$,I%+5,1) = "2" OR             \ If operator record
         MID$(WORK$,I%+5,1) = "3" THEN BEGIN     ! or terminal record

        J% = I% + 4                              ! Offset to record start
        AC.OT.INDICAT0 = ASC(MID$(WORK$,J%+12,1)) ! Get flag data
        AC.OT.RESERVED$ = MID$(WORK$,J%+337,172) ! Get reserved data
        AC.OT.TEAMT(7) = GETN4(WORK$,J%+118)     ! Get On hand MFR coups
        AC.OT.TEAMT(8) = GETN4(WORK$,J%+122)     ! Get On hand STR coups
        GOSUB GET.FBUY.TOTALS                    ! Get new file totals
        SUMM.TOTALS(0) = SUMM.TOTALS(0) + EMSS.FBUYAMT
        SUMM.TOTALS(1) = SUMM.TOTALS(1) + EMSS.FBUYCNT
        SUMM.TOTALS(2) = SUMM.TOTALS(2) + EMSS.COUPCNT  ! SUMMARIZE
        SUMM.TOTALS(3) = SUMM.TOTALS(3) + EMSS.COUPAMT  !  NEW
        SUMM.TOTALS(4) = SUMM.TOTALS(4) + EMSS.MFRCOUP  !   TOTALS
        SUMM.TOTALS(5) = SUMM.TOTALS(5) + EMSS.STRCOUP
        SUMM.TOTALS(6) = SUMM.TOTALS(6) + EMSS.DBLCOUP
        SUMM.TOTALS(7) = SUMM.TOTALS(7) + EMSS.ITEMPTS
        SUMM.TOTALS(8) = SUMM.TOTALS(8) + EMSS.BONSPTS
        SUMM.TOTALS(9) = SUMM.TOTALS(9) + EMSS.REDMPTS

      ENDIF
    NEXT I%                                      ! Next record
  WEND                                           ! next block read
  CLOSE 55                                       ! Close file
  EMSS.FBUYAMT = SUMM.TOTALS(0)
  EMSS.FBUYCNT = SUMM.TOTALS(1)
  EMSS.COUPCNT = SUMM.TOTALS(2)                  ! REPORT
  EMSS.COUPAMT = SUMM.TOTALS(3)                  !  SUMMARIZED
  EMSS.MFRCOUP = SUMM.TOTALS(4)                  !   TOTALS
  EMSS.STRCOUP = SUMM.TOTALS(5)
  EMSS.DBLCOUP = SUMM.TOTALS(6)
  EMSS.ITEMPTS = SUMM.TOTALS(7)
  EMSS.BONSPTS = SUMM.TOTALS(8)
  EMSS.REDMPTS = SUMM.TOTALS(9)
RETURN

GET.FBUY.DATA:
!!********************************************************************
!!**  Get frequent buyer data from file and compute needed totals   **
!!********************************************************************
 DIM AUTO.CPN.ADJ(9)                           ! Clear CPN Adjustments
 IF RP.TITLE$ NE SUMMARY.DESC$ THEN BEGIN      ! Oper, term, or office
  IF OFFICE.REPORT THEN BEGIN                  ! Office report
    AC.OT.RESERVED$ = RIGHT$(AC.ST.RESERVED$,172) ! Get office data
    AC.OT.OPERTERM$ = "OFFICE"                 ! Dummy OPERTERM
    DIM AC.OT.TEAMT(8)                         ! Clear on hand amts
    AC.OT.INDICAT0 = 4                         ! All Picked up
  ENDIF
  GOSUB GET.FBUY.TOTALS                        ! Get new file totals
 ENDIF ELSE BEGIN
   GOSUB GET.RECAP.DATA                        ! Recap for summary report
   AC.OT.OPERTERM$ = "SUMMARY"                 ! Dummy OPERTERM
 ENDIF
 SAV.OPERTERM$ = AC.OT.OPERTERM$                ! Save last record key

 EMSS.TOTLAMT = AC.OT.GROSSPOS - AC.OT.GROSSNEG ! Get total amount
 EMSS.TOTLCNT = AC.OT.NUMTRANS              ! Get total count
 EMSS.NOFBAMT = EMSS.TOTLAMT - EMSS.FBUYAMT ! Get non-FB amount
 EMSS.NOFBCNT = EMSS.TOTLCNT - EMSS.FBUYCNT ! get not-FB count
 EMSS.TOTLPTS = EMSS.ITEMPTS + EMSS.BONSPTS ! Get total points
RETURN

ALTER.AMOUNT:
!!********************************************************************
!!** Get amt from USER$ at I%, add WORK4%, and put new amt in USER$ **
!!********************************************************************
  WORK$ = MID$(USER$,I%,13)                      ! GET AMOUNT TO ALTER
  TEMP4% = 0                                     ! DEFAULT RESULTS
  J% = MATCH("#",WORK$,1)                        ! LOOK FOR NUMERICS
  IF J% THEN BEGIN
    WORK$ = RIGHT$(WORK$,1)                      \ MOVE SIGN AND
        + MID$(WORK$,J%,LEN(WORK$) - J%)         ! STRIP LEADING BLANKS
YY: J% = MATCHB(",",WORK$,1)                     ! LOOK FOR COMMA
    IF J% THEN                                   \ IF FOUND THEN DELETE
      WORK$ = LEFT$(WORK$,J%-1) + RIGHT$(WORK$,LEN(WORK$)-J%) :\
      GOTO YY
ZZ: J% = MATCHB(".",WORK$,1)                     ! LOOK FOR DECIMAL
    IF J% THEN                                   \ IF FOUND THEN DELETE
      WORK$ = LEFT$(WORK$,J%-1) + RIGHT$(WORK$,LEN(WORK$)-J%) :\
      GOTO ZZ
    TEMP4% = VAL(WORK$)                          ! GET VALUE AS INTEGER
  ENDIF
  TEMP4% = TEMP4% + WORK4%                       ! ADD ADJUSTMENT
  WORK$ = MMCFEC06$(TEMP4%,-1,-1)                ! FORMAT NEW AMOUNT
  WORK$ = RIGHT$(WORK2$ + WORK$,13)              ! PAD TO 13 CHARACTERS
  CALL SUBSTR(USER$,I%-1,WORK$,0,13)             ! INSERT DATA IN LINE
RETURN


!!********************************************************************
!!**  Main line code to decide where to put new lines               **
!!********************************************************************
EMSS.STARTFB:
 IF NOT EMSS.READ.DESC THEN BEGIN
!    DIM MSG$(10)          ! IR29169
     DIM MSG$(11)          ! IR29169
     OPEN "EAMEDESC" RECL 49 AS 20 NOWRITE NODEL ! OPEN DESC FILE
     READ #20,1096; MSG$(1)            ! EM SALES LINE
     READ #20,1097; MSG$(2)            ! EM SALES LINE
     READ #20,1098; MSG$(3)            ! EM COUPON LINE
     READ #20,1099; MSG$(4)            ! EM COUPON LINE
     READ #20,1100; MSG$(5)            ! EM POINTS LINE
     READ #20,1101; MSG$(6)            ! EM POINTS LINE
     READ #20,1102; MSG$(7)            ! "ELECTRONIC MFR COUPON  "
     READ #20,1103; MSG$(8)            ! "ELECTRONIC STR COUPON  "
     READ #20,1104; MSG$(9)            ! "DOUBLED COUPON   "
     CLOSE 20                          !
     OPEN "EAMRDESC" RECL 49 AS 20 NOWRITE NODEL ! OPEN DESC FILE
     READ #20,1001; MSG$(10)           ! "OPERATOR               "
     READ #20,1108; MSG$(11)           ! "TERMINAL  "   !IR29169
     READ #20,1150; TENDTYPE$          ! "TENDER TYPE"  !IR40876
     READ #20,1163; TOTALS.DESC$       ! IR37892
     CLOSE 20                          !
     EMSS.READ.DESC = -1
     EMSS.LAST.OPERTERM=""             ! Set to unused  !IR48470
 ENDIF
 IF DESTINATION = 1 THEN BEGIN                ! Destination = display
!AIR49019 odd pages is no longer correct with value pack function
!   IF (MOD(PAGE,2) = 1) AND                   ! Odd numbered page
!      (F8.PRESSED = 0) AND                    ! Not variety screen IR39810
   IF (F8.PRESSED = 0) AND                     \ Not variety screen
\EIR49019
      (LINE.NO > 18) THEN BEGIN               ! At line 19-21
     IF (LINE$ = "") AND                      \ Blank line
        (LEN(LINE$) = 1) AND                  \ Marked line IR49019
        (EMSS.FB.PRINTED = 0) THEN BEGIN      ! Not yet printed
       EMSS.FB.PRINTED = -1                   ! Set printed flag
       GOSUB GET.FBUY.DATA                    ! Get needed acct data
       GOSUB PRINT.FBUY.LINES                 ! Print new lines
       EXIT SUB                               ! Avoid print of input
     ENDIF
   ENDIF ELSE BEGIN
     EMSS.FB.PRINTED = 0                      ! Not yet printed
     IF PAGE = 1 AND LINE.NO < 4 THEN         \ Possible new report
       SAV.OPERTERM$ = "??"                   ! Assure re-read of data
   ENDIF
 ENDIF ELSE BEGIN                             ! Not display

   IF LINE.NO > 13 THEN BEGIN
    IF LINE.NO > EMSS.PRINT.NOW + 13 THEN BEGIN
     IF (EMSS.FB.PRINTED = 0) AND             \ Not yet printed
        (ENH01.SPILL = 0) AND                 \ Not 2nd pg same oper IR40876
        (LINE$ = "") THEN BEGIN               ! Blank line found
       EMSS.FB.PRINTED = -1                   ! Set printed flag
       WRITE FORM "C80,C2";#1;LINE$,SKIP$     ! Print additional line
       LINE.NO = LINE.NO + 1                  ! Bump line count
       GOSUB GET.FBUY.DATA                    ! Get needed acct data
       GOSUB PRINT.FBUY.LINES                 ! Print new lines
     ENDIF
    ENDIF
   ENDIF ELSE BEGIN                           ! Top of page so
     EMSS.FB.PRINTED = 0                      ! Not yet printed
     EMSS.PRINT.NOW  = 0                      ! Assume top of page
   ENDIF
 ENDIF

!!********************************************************************
!!**  Add operator name next to operator number where appropriate   **
!!********************************************************************

!AIR40876
! If the 8th line reads 'tender type' then we are
! on another page of the same operator or terminal due to the
! enhancement feature, and the frequent buyer data has already
! been printed, if needed, and therefore, we should avoid printing it again.

 IF (LINE.NO = 8) AND                        \ Line 8
    (LEFT$(LINE$,20) = TENDTYPE$) THEN BEGIN ! Matches "Tender Type"
   ENH01.SPILL = -1                          ! Set flag indicating 2nd page
   EMSS.FB.PRINTED = -1                      ! Set Flag - printed
 ENDIF                                       ! Line 8 = "tender type"
 IF (LINE.NO > 14) AND                       \ Allowable spot to print
    (ENH01.SPILL) THEN BEGIN                 ! And spillage detected
   ENH01.SPILL = 0                           ! Set spill flag off
   EMSS.FB.PRINTED = -1                      ! Flag as printed
 ENDIF                                       ! OK to print FB info
!EIR40876

 IF LINE.NO = 5 OR                           \ LINE 5
    EMSS.FB.PRINTED THEN BEGIN               ! 2ND OPERATOR ON PAGE
!  I% = MATCH("OPERATOR",LINE$,1)            ! LOOK FOR "OPERATOR"
   I% = MATCH(LEFT$(MSG$(10),8),LINE$,1)     ! LOOK FOR "OPERATOR"
   IF I% THEN BEGIN                          ! IF PRESENT THEN
     IF MID$(LINE$,8,11) <> EMSS.LAST.OPERTERM THEN \ If operator changed IR48470
       EMSS.FB.PRINTED = 0                   ! Not yet printed
     EMSS.LAST.OPERTERM = MID$(LINE$,8,11)   ! Flag and Operator number IR48470
     EMSS.PRINT.NOW = LINE.NO - 5            ! Mark start of new oper
     I% = MATCH("#",LINE$,I%+8)              ! LOOK FOR NUMERICS
     IF I% THEN BEGIN                        ! IF PRESENT THEN
       J% = MATCHB(" ",LINE$,I%)             ! LOOK FOR BLANK
       IF J% = 0 THEN J% = LEN(LINE$) + 1    ! OR FOR EOL
       EMSS.OPER$ = MID$(LINE$,I%,J%-I%)     ! GET OPERATOR
       EMSS.OPER$ = STR$(VAL(EMSS.OPER$))    ! DELETE BLANKS
       EMSS.OPER$ = PACK$(RIGHT$("000000000" \ FORMAT TO 10
                  + EMSS.OPER$,10))          !  PACKED CHARACTERS

! AIR33158 Open the operator authorization file to extract the record length.
!          Use the on error routine, FB.ERR, to find an unused session number
!          if the current one opening EAMOPERA is being used.
       OA.SN = 64
       OA.FILE.NOT.OPEN = -1

       WHILE OA.FILE.NOT.OPEN
         OA.FILE.NOT.OPEN = 0
         OPEN "$AMOPERA" DIRECT RECL 512 AS OA.SN NOWRITE NODEL
       WEND

       ! read op auth file to extract the record length
       READ FORM " T47 I2 C464 "; #OA.SN, 1; OA.RECL, UNNEEDED$

       CLOSE OA.SN   ! Close op auth direct file

       OA.SN = 0     ! Reset variable for on error condition
! EIR33158


       IF END #44 THEN FILE.ERROR            ! IGNORE N.O.F. ERROR
       EMSS.REC$ = ""                        ! ASSUME NO DATA
       IF NOT EMSS.OPER.OPEN THEN BEGIN      ! NOT ALREADY OPEN

! AIR33158 Use variable record length when opening file.
!        OPEN "$AMOPERA" KEYED RECL 72 AS 44 NOWRITE NODEL  ! OPEN FILE
         OPEN "$AMOPERA" KEYED RECL OA.RECL AS 44 NOWRITE NODEL  ! OPEN FILE
! EIR33158

         EMSS.OPER.OPEN = -1
       ENDIF

! AIR33158 Use the variable record length in the read
!      READ FORM "C72"; #44 KEY EMSS.OPER$; EMSS.REC$ ! READ RECORD
       OPA.FMT$ = "C" + STR$(OA.RECL)
       READ FORM OPA.FMT$; #44 KEY EMSS.OPER$; EMSS.REC$ ! READ RECORD
! EIR33158

FILE.ERROR:
       EMSS.OPER$ = MID$(EMSS.REC$,33,20)    ! GET OPERATOR NAME
       LINE$ = LEFT$(LINE$,J%-1)             ! LIMIT LINE
       LINE$ = LINE$ + "     " + EMSS.OPER$  ! APPEND NAME TO LINE
       IF (AC.OT.INDICAT0 AND 80H) NE 0 THEN BEGIN ! RECONCILED
         LINE$ = LINE$ +"     " +YES.RECON$  ! APPEND DESCRIPTOR
       ENDIF ELSE BEGIN                      ! NOT RECONCILED
         LINE$ = LINE$ +"     " +NOT.RECON$  ! APPEND DESCRIPTOR
       ENDIF                                 ! NOT RECONCILED
     ENDIF
!AIR29169
   ENDIF ELSE BEGIN                        ! IR29169
     I% = MATCH(LEFT$(MSG$(11),8),LINE$,1)     ! LOOK FOR "TERMINAL"
     IF (I%) THEN BEGIN
       IF MID$(LINE$,8,11) <> EMSS.LAST.OPERTERM THEN \ If terminal changed IR48470
         EMSS.FB.PRINTED = 0                   ! Not yet printed
       EMSS.LAST.OPERTERM = MID$(LINE$,8,11)   ! Flag and Terminal number IR48470
       EMSS.PRINT.NOW = LINE.NO - 5            ! Mark start of new terminal
     ENDIF
!EIR29169
   ENDIF
 ENDIF

!!********************************************************************
!!**  Get descriptors for store and manufacturer coupons            **
!!********************************************************************
  IF LINE.NO < 3 THEN BEGIN             ! 1ST 2 LINES
    IF STRCPN.NAME$ = "" OR             \ NO DATA YET
       MFRCPN.NAME$ = "" THEN BEGIN     !
      %INCLUDE EAMEMCVC.J86             ! Mfr Cpn Variety (if enabled) IR39149
      OPEN "EAMSDESC" RECL 49 AS 20 NOWRITE NODEL ! OPEN DESC FILE
      READ #20, 7; MFRCPN.NAME$         ! GET MFR COUPON NAME
      READ #20, 8; STRCPN.NAME$         ! GET STR COUPON NAME
!AIR39149
      MFRCPN.NAME$ = LEFT$((MFRCPN.NAME$ + \ Ensure Mfr Cpn descriptor
                     STRING$(18," ")),18)  !  is 18 bytes
      IF (EMSS.EMC.VAR > 0) AND            \ If variety for E-Mfr cpns
         (EMSS.EMC.VAR < 7) THEN BEGIN     !  is valid
        READ #20, (1135 + EMSS.EMC.VAR);   \ Get the appropriate
                   MFRCPN.VAR$             !  descriptor from sdesc
        MFRCPN.VAR$ = LEFT$((MFRCPN.VAR$ + \ Ensure the descriptor is
                      STRING$(18," ")),18) !  18 bytes
      ENDIF                                ! Valid Variety
!EIR39149
      CLOSE 20                          !
      IF LEN(NOT.RECON$) = 0 OR         \ NO DESCRIPTORS YET
         LEN(YES.RECON$) = 0 THEN BEGIN !
        READ #6, 4370; YES.RECON$       ! GET "RECONCILED"
        READ #6, 4371; NOT.RECON$       ! GET "NOT RECONCILED"
      ENDIF                             ! NO DESCRIPTORS YET
      IF SUMMARY.DESC$ = "" THEN        \
        READ #6, 1109; SUMMARY.DESC$    ! SUMMARY CASH REPORT TITLE
      IF PGM.NAME$ = "" THEN BEGIN      ! NO PROGRAM NAME
        CLOSE 8                         ! CLOSE OPTIONS IF OPEN
        OPEN "EAMFBOPT" AS 8 BUFFSIZE 512 NOWRITE NODEL
        %INCLUDE USEROPRR.J86           ! READ OPTIONS
        CLOSE 8
      ENDIF
    ENDIF
  ENDIF

!!********************************************************************
!!**  Get frequent buyer data if needed after PgUp                  **
!!********************************************************************
 IF (LINE.NO > 8) THEN BEGIN                  ! At line 9 - 21
   IF DESTINATION = 1 THEN BEGIN               ! Destination = display
!AIO00534 When doing PgUp, get needed data on any page
\    IF (MOD(PAGE,2) = 0) THEN BEGIN            ! Even numbered page
!EIO00534
       IF SAV.OPERTERM$ NE AC.OT.OPERTERM$ THEN  \ New data needed
         GOSUB GET.FBUY.DATA                     ! Get needed acct data
\    ENDIF                                       ! IO00534
   ENDIF

!!********************************************************************
!!**  Alter manufacturer coupon line if needed                      **
!!********************************************************************
   IF EMSS.MFRCOUP THEN BEGIN                ! AUTO MFR COUPONS PRESENT
!AIR39149
!    IF MID$(LINE$,3,10) = LEFT$(MFRCPN.NAME$,10) AND \ RIGHT LINE
! Match on the full descriptor so as to not confuse this
! line with the TBV Mfr Cpn Lines
     IF MID$(LINE$,3,18) = LEFT$(MFRCPN.NAME$,18) AND \ RIGHT LINE
\EIR39149
        MID$(LINE$,40,40) NE " " THEN BEGIN  ! WITH DATA
       WORK2$ = STRING$(12," ")              ! 12 BLANKS
       USER$ = LINE$                         ! GET LINE TO ALTER
       I% = 37                               ! PICKUP OFFSET
       WORK4% = -AUTO.CPN.ADJ(1)             ! PICKUP ADJUSTMENT
       IF WORK4% THEN GOSUB ALTER.AMOUNT     ! SUBTRACT FROM PICKUPS
       I% = 51                               ! ONHAND OFFSET
       WORK4% = -AUTO.CPN.ADJ(2)             ! ONHAND ADJUSTMENT
       IF WORK4% THEN GOSUB ALTER.AMOUNT     ! SUBTRACT FROM ON HAND
       I% = 66                               ! NET OFFSET
       WORK4% = -AUTO.CPN.ADJ(3)             ! NET ADJUSTMENT
       IF WORK4% THEN GOSUB ALTER.AMOUNT     ! SUBTRACT FROM NET

       GOSUB WRITE.LINE                      ! WRITE THE LINE
       EMSS.CPN.ALTERED = -1                 ! Coupon line altered
       EXIT SUB                              ! Avoid print of input
     ENDIF
!AIR39149 - This section will handle altering the variety
!           line of Mfr Coupons (if enabled).  The first condition
!           looks for a match starting at column 3 for the display
!           report.  For the print report, the descriptor starts
!           in column 4.  The same math is performed here as
!           above for the main tender.
     IF (MID$(LINE$,3,18) = LEFT$(MFRCPN.VAR$,18) OR  \  Right display Line OR
         MID$(LINE$,4,18) = LEFT$(MFRCPN.VAR$,18)) AND \ Right Print Line
        MID$(LINE$,40,40) NE " " THEN BEGIN  ! WITH DATA
       WORK2$ = STRING$(12," ")              ! 12 BLANKS
       USER$ = LINE$                         ! GET LINE TO ALTER
       I% = 37                               ! PICKUP OFFSET
       WORK4% = -AUTO.CPN.ADJ(1)             ! PICKUP ADJUSTMENT
       IF WORK4% THEN GOSUB ALTER.AMOUNT     ! SUBTRACT FROM PICKUPS
       I% = 51                               ! ONHAND OFFSET
       WORK4% = -AUTO.CPN.ADJ(2)             ! ONHAND ADJUSTMENT
       IF WORK4% THEN GOSUB ALTER.AMOUNT     ! SUBTRACT FROM ON HAND
       I% = 66                               ! NET OFFSET
       WORK4% = -AUTO.CPN.ADJ(3)             ! NET ADJUSTMENT
       IF WORK4% THEN GOSUB ALTER.AMOUNT     ! SUBTRACT FROM NET

       GOSUB WRITE.LINE                      ! WRITE THE LINE
       EMSS.CPN.ALTERED = -1                 ! Coupon line altered
       EXIT SUB                              ! Avoid print of input
     ENDIF                                   ! E-Mfr Cpn Variety
!EIR39149
   ENDIF

!!********************************************************************
!!**  Alter store coupon line if needed                             **
!!********************************************************************
   IF EMSS.STRCOUP OR EMSS.DBLCOUP THEN BEGIN ! AUTO STR COUPON AVAILABLE
     IF MID$(LINE$,3,10) = LEFT$(STRCPN.NAME$,10) AND \ RIGHT LINE
        MID$(LINE$,40,40) NE " " THEN BEGIN  ! WITH DATA
       WORK2$ = STRING$(12," ")              ! 12 BLANKS
       USER$ = LINE$                         ! GET LINE TO ALTER
       I% = 37                               ! PICKUP OFFSET
       WORK4% = -AUTO.CPN.ADJ(4)             \ PICKUP ADJUSTMENT
                -AUTO.CPN.ADJ(7)
       IF WORK4% THEN GOSUB ALTER.AMOUNT     ! SUBTRACT FROM PICKUPS
       I% = 51                               ! ONHAND OFFSET
       WORK4% = -AUTO.CPN.ADJ(5)             \ ONHAND ADJUSTMENT
                -AUTO.CPN.ADJ(8)
       IF WORK4% THEN GOSUB ALTER.AMOUNT     ! SUBTRACT FROM ON HAND
       I% = 66                               ! NET OFFSET
       WORK4% = -AUTO.CPN.ADJ(6)             \ NET ADJUSTMENT
                -AUTO.CPN.ADJ(9)
       IF WORK4% THEN GOSUB ALTER.AMOUNT     ! SUBTRACT FROM NET

       GOSUB WRITE.LINE                      ! WRITE THE LINE
       EMSS.CPN.ALTERED = -1                 ! Coupon line altered
       EXIT SUB                              ! Avoid print of input
     ENDIF
   ENDIF

!!********************************************************************
!!**  Alter tender total line if needed                             **
!!********************************************************************
   IF EMSS.STRCOUP OR EMSS.DBLCOUP OR        \ AUTO STR COUPON PRESENT
      EMSS.MFRCOUP THEN BEGIN                ! AUTO MFR COUPON PRESENT
!AIR37892
!    IF LEFT$(LINE$,8) = "TOTALS :" THEN BEGIN ! RIGHT LINE
     IF LEFT$(LINE$,8) = LEFT$(TOTALS.DESC$,8) THEN BEGIN ! RIGHT LINE
!EIR37892
!AIR34954 Moved Code below
!      WORK4% = AUTO.CPN.ADJ(3)              \ TOTAL NET ADJUSTMENT
!             + AUTO.CPN.ADJ(6)              \   TO GO TO ONHAND
!             + AUTO.CPN.ADJ(9)
!      IF WORK4% THEN BEGIN                  ! ADJUSTMENTS TO NET
!        WORK2$ = STRING$(12," ")            ! 12 BLANKS
!        USER$ = LINE$                       ! GET LINE TO ALTER
!        I% = 51                             ! ONHAND OFFSET
!        GOSUB ALTER.AMOUNT                  ! ADD TO ON HAND
!        I% = 66                             ! NET OFFSET
!        WORK4% = -WORK4%                    ! NET ADJUSTMENT
!        GOSUB ALTER.AMOUNT                  ! SUBTRACT FROM NET
!        GOSUB WRITE.LINE                    ! WRITE THE LINE
!        EXIT SUB                            ! Avoid print of input
!      ENDIF
!    ENDIF
!  ENDIF
!EIR34954

!!********************************************************************
!!**  Insert new tender lines as needed for auto or doubled coupons **
!!********************************************************************
       IF EMSS.CPN.ALTERED THEN BEGIN            ! Coupon line altered
     !   IF LINE$ = "" THEN BEGIN                 ! BLANK LINE              !IR34954
          EMSS.CPN.ALTERED = 0                    ! Coupon lines shown
          EMSS.DEF$ = STRING$(79," ")             ! DEFAULT NEW LINE
     !    WORK$ = ".00"                           ! WITH ZERO AMOUNTS
          WORK$ = MMCFEC06$(0,-1,-1)              ! WITH ZERO AMOUNTS
          IF RIGHT$(WORK$,1) = " " THEN
             WORK$ = LEFT$(WORK$,LEN(WORK$) - 1)  ! STRIP TRAILING BLANK
          WORK$ = RIGHT$("   " + WORK$,3)         ! ENSURE LENGTH = 3
          CALL SUBSTR(EMSS.DEF$,45,WORK$,0,3)     ! INITIALIZE PICKUPS
          CALL SUBSTR(EMSS.DEF$,59,WORK$,0,3)     ! INITIALIZE ONHAND
          CALL SUBSTR(EMSS.DEF$,74,WORK$,0,3)     ! INITIALIZE NET
          WORK2$ = STRING$(12," ")                ! 12 BLANKS

          IF EMSS.MFRCOUP THEN BEGIN              ! AUTO MFR COUPONS
            USER$ = EMSS.DEF$                     ! DEFAULT NEW LINE
     !      WORK$ = "ELECTRONIC " + MFRCPN.NAME$  ! DESCRIPTOR
            WORK$ = MSG$(7)                       ! DESCRIPTOR
            CALL SUBSTR(USER$,2,WORK$,0,LEN(WORK$)) ! INSERT IN LINE
            I% = 37                               ! PICKUP OFFSET
            WORK4% = AUTO.CPN.ADJ(1)              ! PICKUP ADJUSTMENT
            IF WORK4% THEN GOSUB ALTER.AMOUNT     ! ADD TO PICKUPS
            I% = 51                               ! ONHAND OFFSET
            WORK4% = AUTO.CPN.ADJ(2)              \ ONHAND ADJUSTMENT
                    + AUTO.CPN.ADJ(3)              ! NET ADJUSTMENT
            IF WORK4% THEN GOSUB ALTER.AMOUNT     ! ADD TO ON HAND
            GOSUB WRITE.LINE                      ! WRITE THE LINE
          ENDIF
!AIR39810
!         IF EMSS.STRCOUP THEN BEGIN              ! AUTO STR COUPONS
          IF (EMSS.STRCOUP <> 0) AND              \ Auto Store Coupons
             (F8.PRESSED = 0) THEN BEGIN          !  and not Variety display
!EIR39810
            USER$ = EMSS.DEF$                     ! DEFAULT NEW LINE
     !      WORK$ = "ELECTRONIC " + STRCPN.NAME$  ! DESCRIPTOR
            WORK$ = MSG$(8)                       ! DESCRIPTOR
            CALL SUBSTR(USER$,2,WORK$,0,LEN(WORK$)) ! INSERT IN LINE
            I% = 37                               ! PICKUP OFFSET
            WORK4% = AUTO.CPN.ADJ(4)              ! PICKUP ADJUSTMENT
            IF WORK4% THEN GOSUB ALTER.AMOUNT     ! ADD TO PICKUPS
            I% = 51                               ! ONHAND OFFSET
            WORK4% = AUTO.CPN.ADJ(5)              \ ONHAND ADJUSTMENT
                   + AUTO.CPN.ADJ(6)              ! NET ADJUSTMENT
            IF WORK4% THEN GOSUB ALTER.AMOUNT     ! ADD TO ON HAND
            GOSUB WRITE.LINE                      ! WRITE THE LINE
          ENDIF

!AIR39810
!         IF EMSS.DBLCOUP THEN BEGIN              ! DBL COUPONS
          IF (EMSS.DBLCOUP <> 0) AND              \ Double Coupons and
             (F8.PRESSED = 0) THEN BEGIN          !  not variety display
!EIR39810
            USER$ = EMSS.DEF$                     ! DEFAULT NEW LINE
     !      WORK$ = "DOUBLED COUPON   "           ! DESCRIPTOR
            WORK$ = MSG$(9)                       ! DESCRIPTOR
            CALL SUBSTR(USER$,2,WORK$,0,LEN(WORK$)) ! INSERT IN LINE
            I% = 37                               ! PICKUP OFFSET
            WORK4% = AUTO.CPN.ADJ(7)              ! PICKUP ADJUSTMENT
            IF WORK4% THEN GOSUB ALTER.AMOUNT     ! ADD TO PICKUPS
            I% = 51                               ! ONHAND OFFSET
            WORK4% = AUTO.CPN.ADJ(8)              \ ONHAND ADJUSTMENT
                   + AUTO.CPN.ADJ(9)              ! NET ADJUSTMENT
            IF WORK4% THEN GOSUB ALTER.AMOUNT     ! ADD TO ON HAND
            GOSUB WRITE.LINE                      ! WRITE THE LINE
          ENDIF
      ! ENDIF                                    ! BLANK LINE         !IR34954
        ENDIF                                     ! COUPONS ALTERED
        USER$ = ""                                ! SET FOR BLANK LINE !IR34954
        GOSUB WRITE.LINE                          ! PRINT IT           !IR34954

!AIR34954 Code moved from above
        WORK4% = AUTO.CPN.ADJ(3)              \ TOTAL NET ADJUSTMENT
                + AUTO.CPN.ADJ(6)              \   TO GO TO ONHAND
                + AUTO.CPN.ADJ(9)
!AIR53673 Electronic coupons never alter the Tender By Variety Totals
        IF (F8.PRESSED) THEN BEGIN            ! Tender By Variety screen
          WORK4% = 0                          ! do not adjust the totals
        ENDIF
!EIR53673
        IF WORK4% THEN BEGIN                  ! ADJUSTMENTS TO NET
           WORK2$ = STRING$(12," ")           ! 12 BLANKS
           USER$ = LINE$                      ! GET LINE TO ALTER
           I% = 51                            ! ONHAND OFFSET
           GOSUB ALTER.AMOUNT                 ! ADD TO ON HAND
           I% = 66                            ! NET OFFSET
           WORK4% = -WORK4%                   ! NET ADJUSTMENT
           GOSUB ALTER.AMOUNT                 ! SUBTRACT FROM NET
           GOSUB WRITE.LINE                   ! WRITE THE LINE
           EXIT SUB                           ! Avoid print of input
        ENDIF                                 ! ADJUSTMENTS TO NET
     ENDIF                                    ! TOTAL LINE
   ENDIF                                     ! AUTO COUPONS
 ENDIF                                        ! LINE > 9
!EIR34954

!AIR36257
 IF DESTINATION = 1 AND                   \ Destination = display
    LINE.NO > 21 THEN BEGIN               ! Line is off of screen
   LINE.NO = LINE.NO + 1                  ! bump line number
   EXIT SUB                               ! Don't display excess
 ENDIF
!EIR36257
EMSS.ENDFB:
!         END OF USER EXIT CODE
\ REM!!****************************************************************
